var x509=function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}({"./node_modules/asn1-ts/dist/node/asn1.js":
/*!************************************************!*\
  !*** ./node_modules/asn1-ts/dist/node/asn1.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tvar threw = true;\n/******/ \t\ttry {\n/******/ \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\t\tthrew = false;\n/******/ \t\t} finally {\n/******/ \t\t\tif(threw) delete installedModules[moduleId];\n/******/ \t\t}\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === \'object\' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, \'default\', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != \'string\') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module[\'default\']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, \'a\', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! util */ "./node_modules/util/util.js");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./source/errors.ts\nclass ASN1Error extends Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1NotImplementedError extends ASN1Error {\n    constructor() {\n        super("Not yet implemented.");\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1RecursionError extends ASN1Error {\n    constructor() {\n        super("Recursion was too deep.");\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1TruncationError extends ASN1Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1OverflowError extends ASN1Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1SizeError extends ASN1Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1PaddingError extends ASN1Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1UndefinedError extends ASN1Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1CharactersError extends ASN1Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\nclass ASN1ConstructionError extends ASN1Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, ASN1Error.prototype);\n    }\n}\n\n// CONCATENATED MODULE: ./source/asn1.ts\n\nclass asn1_ASN1Element {\n    constructor() {\n        this.recursionCount = 0;\n        this.tagClass = 0;\n        this.construction = 0;\n        this.tagNumber = 0;\n        this.value = new Uint8Array(0);\n    }\n    get length() {\n        return this.value.length;\n    }\n    static validateDateTime(dataType, year, month, date, hours, minutes, seconds) {\n        switch (month) {\n            case 0:\n            case 2:\n            case 4:\n            case 6:\n            case 7:\n            case 9:\n            case 11:\n                if (date > 31)\n                    throw new ASN1Error(`Day > 31 encountered in ${dataType} with 31-day month.`);\n                break;\n            case 3:\n            case 5:\n            case 8:\n            case 10:\n                if (date > 30)\n                    throw new ASN1Error(`Day > 31 encountered in ${dataType} with 30-day month.`);\n                break;\n            case 1:\n                let isLeapYear = ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n                if (isLeapYear) {\n                    if (date > 29)\n                        throw new ASN1Error(`Day > 29 encountered in ${dataType} with month of February in leap year.`);\n                }\n                else {\n                    if (date > 28)\n                        throw new ASN1Error(`Day > 28 encountered in ${dataType} with month of February and non leap year.`);\n                }\n                break;\n            default:\n                throw new ASN1Error(`Month greater than 12 encountered in ${dataType}.`);\n        }\n        if (hours > 23)\n            throw new ASN1Error(`Hours > 23 encountered in ${dataType}.`);\n        if (minutes > 59)\n            throw new ASN1Error(`Minutes > 60 encountered in ${dataType}.`);\n        if (seconds > 59)\n            throw new ASN1Error(`Seconds > 60 encountered in ${dataType}.`);\n    }\n    static decodeUnsignedBigEndianInteger(value) {\n        if (value.length === 0)\n            return 0;\n        if (value.length > 4)\n            throw new ASN1OverflowError("Number too long to decode.");\n        const u8 = new Uint8Array(4);\n        u8.set(value, (4 - value.length));\n        return new Uint32Array(u8.reverse().buffer)[0];\n    }\n    static decodeSignedBigEndianInteger(value) {\n        if (value.length === 0)\n            return 0;\n        if (value.length > 4)\n            throw new ASN1OverflowError("Number too long to decode.");\n        const u8 = new Uint8Array(4);\n        if (value[0] >= 0b10000000)\n            u8.fill(0xFF);\n        u8.set(value, (4 - value.length));\n        return new Int32Array(u8.reverse().buffer)[0];\n    }\n}\nasn1_ASN1Element.nestingRecursionLimit = 5;\n\n// CONCATENATED MODULE: ./source/values.ts\nconst MAX_UINT_32 = 0x00FFFFFFFF;\nconst MIN_UINT_32 = 0x0000000000;\nconst MAX_SINT_32 = 0x7FFFFFFF;\nconst MIN_SINT_32 = -0x80000000;\nvar ASN1TagClass;\n(function (ASN1TagClass) {\n    ASN1TagClass[ASN1TagClass["universal"] = 0] = "universal";\n    ASN1TagClass[ASN1TagClass["application"] = 1] = "application";\n    ASN1TagClass[ASN1TagClass["context"] = 2] = "context";\n    ASN1TagClass[ASN1TagClass["private"] = 3] = "private";\n})(ASN1TagClass || (ASN1TagClass = {}));\nvar ASN1Construction;\n(function (ASN1Construction) {\n    ASN1Construction[ASN1Construction["primitive"] = 0] = "primitive";\n    ASN1Construction[ASN1Construction["constructed"] = 1] = "constructed";\n})(ASN1Construction || (ASN1Construction = {}));\nvar LengthEncodingPreference;\n(function (LengthEncodingPreference) {\n    LengthEncodingPreference[LengthEncodingPreference["definite"] = 0] = "definite";\n    LengthEncodingPreference[LengthEncodingPreference["indefinite"] = 1] = "indefinite";\n})(LengthEncodingPreference || (LengthEncodingPreference = {}));\nvar ASN1SpecialRealValue;\n(function (ASN1SpecialRealValue) {\n    ASN1SpecialRealValue[ASN1SpecialRealValue["plusInfinity"] = 64] = "plusInfinity";\n    ASN1SpecialRealValue[ASN1SpecialRealValue["minusInfinity"] = 65] = "minusInfinity";\n    ASN1SpecialRealValue[ASN1SpecialRealValue["notANumber"] = 66] = "notANumber";\n    ASN1SpecialRealValue[ASN1SpecialRealValue["minusZero"] = 67] = "minusZero";\n})(ASN1SpecialRealValue || (ASN1SpecialRealValue = {}));\nvar ASN1RealEncodingBase;\n(function (ASN1RealEncodingBase) {\n    ASN1RealEncodingBase[ASN1RealEncodingBase["base2"] = 0] = "base2";\n    ASN1RealEncodingBase[ASN1RealEncodingBase["base8"] = 16] = "base8";\n    ASN1RealEncodingBase[ASN1RealEncodingBase["base16"] = 32] = "base16";\n})(ASN1RealEncodingBase || (ASN1RealEncodingBase = {}));\nvar ASN1RealEncodingScale;\n(function (ASN1RealEncodingScale) {\n    ASN1RealEncodingScale[ASN1RealEncodingScale["scale0"] = 0] = "scale0";\n    ASN1RealEncodingScale[ASN1RealEncodingScale["scale1"] = 4] = "scale1";\n    ASN1RealEncodingScale[ASN1RealEncodingScale["scale2"] = 8] = "scale2";\n    ASN1RealEncodingScale[ASN1RealEncodingScale["scale3"] = 12] = "scale3";\n})(ASN1RealEncodingScale || (ASN1RealEncodingScale = {}));\nvar ASN1UniversalType;\n(function (ASN1UniversalType) {\n    ASN1UniversalType[ASN1UniversalType["endOfContent"] = 0] = "endOfContent";\n    ASN1UniversalType[ASN1UniversalType["boolean"] = 1] = "boolean";\n    ASN1UniversalType[ASN1UniversalType["integer"] = 2] = "integer";\n    ASN1UniversalType[ASN1UniversalType["bitString"] = 3] = "bitString";\n    ASN1UniversalType[ASN1UniversalType["octetString"] = 4] = "octetString";\n    ASN1UniversalType[ASN1UniversalType["nill"] = 5] = "nill";\n    ASN1UniversalType[ASN1UniversalType["objectIdentifier"] = 6] = "objectIdentifier";\n    ASN1UniversalType[ASN1UniversalType["objectDescriptor"] = 7] = "objectDescriptor";\n    ASN1UniversalType[ASN1UniversalType["external"] = 8] = "external";\n    ASN1UniversalType[ASN1UniversalType["realNumber"] = 9] = "realNumber";\n    ASN1UniversalType[ASN1UniversalType["enumerated"] = 10] = "enumerated";\n    ASN1UniversalType[ASN1UniversalType["embeddedPDV"] = 11] = "embeddedPDV";\n    ASN1UniversalType[ASN1UniversalType["utf8String"] = 12] = "utf8String";\n    ASN1UniversalType[ASN1UniversalType["relativeOID"] = 13] = "relativeOID";\n    ASN1UniversalType[ASN1UniversalType["reserved14"] = 14] = "reserved14";\n    ASN1UniversalType[ASN1UniversalType["reserved15"] = 15] = "reserved15";\n    ASN1UniversalType[ASN1UniversalType["sequence"] = 16] = "sequence";\n    ASN1UniversalType[ASN1UniversalType["set"] = 17] = "set";\n    ASN1UniversalType[ASN1UniversalType["numericString"] = 18] = "numericString";\n    ASN1UniversalType[ASN1UniversalType["printableString"] = 19] = "printableString";\n    ASN1UniversalType[ASN1UniversalType["teletexString"] = 20] = "teletexString";\n    ASN1UniversalType[ASN1UniversalType["videotexString"] = 21] = "videotexString";\n    ASN1UniversalType[ASN1UniversalType["ia5String"] = 22] = "ia5String";\n    ASN1UniversalType[ASN1UniversalType["utcTime"] = 23] = "utcTime";\n    ASN1UniversalType[ASN1UniversalType["generalizedTime"] = 24] = "generalizedTime";\n    ASN1UniversalType[ASN1UniversalType["graphicString"] = 25] = "graphicString";\n    ASN1UniversalType[ASN1UniversalType["visibleString"] = 26] = "visibleString";\n    ASN1UniversalType[ASN1UniversalType["generalString"] = 27] = "generalString";\n    ASN1UniversalType[ASN1UniversalType["universalString"] = 28] = "universalString";\n    ASN1UniversalType[ASN1UniversalType["characterString"] = 29] = "characterString";\n    ASN1UniversalType[ASN1UniversalType["bmpString"] = 30] = "bmpString";\n})(ASN1UniversalType || (ASN1UniversalType = {}));\nconst printableStringCharacters = "etaoinsrhdlucmfywgpbvkxqjzETAOINSRHDLUCMFYWGPBVKXQJZ0123456789 \'()+,-./:=?";\nconst utcTimeRegex = /^(?<year>\\d{2})(?<month>(?:1[0-2])|(?:0\\d))(?<date>(?:3[01])|(?:[0-2]\\d))(?<hour>(?:2[0-3])|(?:[01]\\d))(?<minute>[0-5]\\d)(?<second>[0-5]\\d)?(?<offset>(?:(\\+|\\-)((?:2[0-3])|(?:[01]\\d))[0-5]\\d)|Z)$/;\nconst distinguishedUTCTimeRegex = /^(?<year>\\d{2})(?<month>(?:1[0-2])|(?:0\\d))(?<date>(?:3[01])|(?:[0-2]\\d))(?<hour>(?:2[0-3])|(?:[01]\\d))(?<minute>[0-5]\\d)(?<second>[0-5]\\d)?Z$/;\nconst generalizedTimeRegex = /^(?<year>\\d{4})(?<month>(?:1[0-2])|(?:0\\d))(?<date>(?:3[01])|(?:[0-2]\\d))(?<hour>(?:2[0-3])|(?:[01]\\d))(?<minute>[0-5]\\d)?(?<second>[0-5]\\d)?(?:(\\.|,)(?<fraction>\\d+))?(?<offset>(?:(\\+|\\-)((?:2[0-3])|(?:[01]\\d))[0-5]\\d)|Z)?$/;\nconst distinguishedGeneralizedTimeRegex = /^(?<year>\\d{4})(?<month>(?:1[0-2])|(?:0\\d))(?<date>(?:3[01])|(?:[0-2]\\d))(?<hour>(?:2[0-3])|(?:[01]\\d))(?<minute>[0-5]\\d)(?<second>[0-5]\\d)(?:(\\.|,)(?<fraction>\\d*[1-9]))?Z$/;\nconst nr1Regex = /^\\ *(\\+|\\-)?\\d+$/;\nconst nr2Regex = /^\\ *(\\+|\\-)?(?:\\d+(\\.|,)\\d*)|(?:\\d*(\\.|,)\\d+)$/;\nconst nr3Regex = /^\\ *(\\+|\\-)?(?:\\d+(\\.|,)\\d*)|(?:\\d*(\\.|,)\\d+)(e|E)(\\+|\\-)?\\d+$/;\nconst canonicalNR3Regex = /^\\ *\\-?(?:[1-9]\\d*)?[1-9]\\.E(?:\\+0)|(?:\\-?[1-9]\\d*)$/;\nconst distinguishedNR3Regex = /^\\ *\\-?(?:[1-9]\\d*)?[1-9]\\.E(?:\\+0)|(?:\\-?[1-9]\\d*)$/;\nconst CANONICAL_TAG_CLASS_ORDERING = [\n    0,\n    1,\n    3,\n    2\n];\n\n// CONCATENATED MODULE: ./source/types/objectidentifier.ts\nclass ObjectIdentifier {\n    constructor(nodes) {\n        if (nodes.length < 2)\n            throw new Error("Cannot construct an OID with less than two nodes!");\n        if (nodes.length >= 1 && !(nodes[0] in [0, 1, 2]))\n            throw new Error("OIDs first node must be 0, 1, or 2!");\n        if (((nodes[0] < 2) && nodes[1] > 39) ||\n            (nodes[0] === 2 && nodes[1] > 175))\n            throw new Error(`OID Node #2 cannot exceed 39 if node #1 is 0 or 1, and 175 if node #1 is 2. Received these nodes: ${nodes}.`);\n        nodes.forEach(node => {\n            if (node < 0)\n                throw new Error("OID node numbers cannot be negative!");\n            if (node > Number.MAX_SAFE_INTEGER)\n                throw new Error("OID number was too big!");\n        });\n        this._nodes = nodes.slice(0);\n    }\n    get nodes() {\n        return this._nodes.slice(0);\n    }\n    get dotDelimitedNotation() {\n        return this._nodes.join(".");\n    }\n    toString() {\n        return this.dotDelimitedNotation;\n    }\n}\n\n// EXTERNAL MODULE: external "util"\nvar external_util_ = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./source/x690.ts\n\n\n\n\n\nclass x690_X690Element extends asn1_ASN1Element {\n    validateTag(permittedClasses, permittedConstruction, permittedNumbers) {\n        if (!permittedClasses.includes(this.tagClass))\n            return -1;\n        if (!permittedConstruction.includes(this.construction))\n            return -2;\n        if (!permittedNumbers.includes(this.tagNumber))\n            return -3;\n        return 0;\n    }\n    set integer(value) {\n        if (value < MIN_SINT_32)\n            throw new ASN1OverflowError(`Number ${value} too small to be converted.`);\n        if (value > MAX_SINT_32)\n            throw new ASN1OverflowError(`Number ${value} too big to be converted.`);\n        if (value <= 127 && value >= -128) {\n            this.value = new Uint8Array([\n                (value & 255)\n            ]);\n            return;\n        }\n        else if (value <= 32767 && value >= -32768) {\n            this.value = new Uint8Array([\n                (value >> 8 & 255),\n                (value & 255)\n            ]);\n            return;\n        }\n        else if (value <= 8388607 && value >= -8388608) {\n            this.value = new Uint8Array([\n                ((value >> 16) & 255),\n                (value >> 8 & 255),\n                (value & 255)\n            ]);\n            return;\n        }\n        else {\n            this.value = new Uint8Array([\n                ((value >> 24) & 255),\n                ((value >> 16) & 255),\n                (value >> 8 & 255),\n                (value & 255)\n            ]);\n            return;\n        }\n    }\n    get integer() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("INTEGER cannot be constructed.");\n        if (this.value.length === 0)\n            throw new ASN1SizeError("Number encoded on zero bytes!");\n        if (this.value.length > 4)\n            throw new ASN1OverflowError("Number too long to decode.");\n        if (this.value.length > 2 &&\n            ((this.value[0] === 0xFF && this.value[1] >= 0b10000000) ||\n                (this.value[0] === 0x00 && this.value[1] < 0b10000000)))\n            throw new ASN1PaddingError("Unnecessary padding bytes on INTEGER or ENUMERATED.");\n        return asn1_ASN1Element.decodeSignedBigEndianInteger(this.value.subarray(0));\n    }\n    set objectIdentifier(value) {\n        const numbers = value.nodes;\n        let pre = [((numbers[0] * 40) + numbers[1])];\n        let post = x690_X690Element.encodeObjectIdentifierNodes(numbers.slice(2));\n        this.value = new Uint8Array(pre.concat(post));\n    }\n    get objectIdentifier() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("OBJECT IDENTIFIER cannot be constructed.");\n        if (this.value.length === 0)\n            throw new ASN1TruncationError("Encoded value was too short to be an OBJECT IDENTIFIER!");\n        let numbers = [0, 0];\n        if (this.value[0] >= 0x50) {\n            numbers[0] = 2;\n            numbers[1] = (this.value[0] - 0x50);\n        }\n        else if (this.value[0] >= 0x28) {\n            numbers[0] = 1;\n            numbers[1] = (this.value[0] - 0x28);\n        }\n        else {\n            numbers[0] = 0;\n            numbers[1] = this.value[0];\n        }\n        if (this.value.length === 1)\n            return new ObjectIdentifier(numbers);\n        numbers = numbers.concat(x690_X690Element.decodeObjectIdentifierNodes(this.value.slice(1)));\n        return new ObjectIdentifier(numbers);\n    }\n    set enumerated(value) {\n        this.integer = value;\n    }\n    get enumerated() {\n        return this.integer;\n    }\n    set relativeObjectIdentifier(value) {\n        this.value = new Uint8Array(x690_X690Element.encodeObjectIdentifierNodes(value));\n    }\n    get relativeObjectIdentifier() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("Relative OID cannot be constructed.");\n        return x690_X690Element.decodeObjectIdentifierNodes(this.value.slice(0));\n    }\n    static decodeObjectIdentifierNodes(value) {\n        if (value.length === 0)\n            return [];\n        let numbers = [];\n        if (value.length > 0 && (value[(value.length - 1)] & 0b10000000) === 0b10000000)\n            throw new ASN1TruncationError("OID truncated");\n        let components = 0;\n        value.forEach(b => { if (!(b & 0b10000000))\n            components++; });\n        numbers.length = components;\n        let currentNumber = 0;\n        let bytesUsedInCurrentNumber = 0;\n        value.forEach(b => {\n            if (bytesUsedInCurrentNumber === 0 && b === 0b10000000)\n                throw new ASN1PaddingError("OID had invalid padding byte.");\n            if (numbers[currentNumber] > (Number.MAX_SAFE_INTEGER >>> 7))\n                throw new ASN1OverflowError("OID node too big");\n            numbers[currentNumber] <<= 7;\n            numbers[currentNumber] |= (b & 0x7F);\n            if (!(b & 0b10000000)) {\n                currentNumber++;\n                bytesUsedInCurrentNumber = 0;\n            }\n            else {\n                bytesUsedInCurrentNumber++;\n            }\n        });\n        return numbers;\n    }\n    static encodeObjectIdentifierNodes(value) {\n        let ret = [];\n        for (let i = 0; i < value.length; i++) {\n            let number = value[i];\n            if (number < 128) {\n                ret.push(number);\n                continue;\n            }\n            let encodedOIDNode = [];\n            while (number !== 0) {\n                let numberBytes = [\n                    (number & 255),\n                    (number >>> 8 & 255),\n                    ((number >>> 16) & 255),\n                    ((number >>> 24) & 255),\n                ];\n                if ((numberBytes[0] & 0x80) === 0)\n                    numberBytes[0] |= 0x80;\n                encodedOIDNode.unshift(numberBytes[0]);\n                number >>= 7;\n            }\n            encodedOIDNode[encodedOIDNode.length - 1] &= 0x7F;\n            ret = ret.concat(encodedOIDNode);\n        }\n        return ret;\n    }\n    static isInCanonicalOrder(elements) {\n        let previousTagClass = null;\n        let previousTagNumber = null;\n        if (!elements.every((element) => {\n            if (!Object(external_util_["isNull"])(previousTagClass) &&\n                element.tagClass !== previousTagClass &&\n                CANONICAL_TAG_CLASS_ORDERING.indexOf(element.tagClass) <=\n                    CANONICAL_TAG_CLASS_ORDERING.indexOf(previousTagClass))\n                return false;\n            if (element.tagClass !== previousTagClass)\n                previousTagNumber = null;\n            if (!Object(external_util_["isNull"])(previousTagNumber) && element.tagNumber < previousTagNumber)\n                return false;\n            previousTagClass = element.tagClass;\n            previousTagNumber = element.tagNumber;\n            return true;\n        }))\n            return false;\n        return true;\n    }\n    static isUniquelyTagged(elements) {\n        const finds = {};\n        for (let i = 0; i < elements.length; i++) {\n            const key = `${elements[i].tagClass}.${elements[i].tagNumber}`;\n            if (key in finds)\n                return false;\n            finds[key] = null;\n        }\n        return true;\n    }\n}\n\n// CONCATENATED MODULE: ./source/codecs/ber.ts\n\n\n\n\nclass ber_BERElement extends x690_X690Element {\n    constructor(tagClass = 0, construction = 0, tagNumber = 0) {\n        super();\n        this.tagClass = tagClass;\n        this.construction = construction;\n        this.tagNumber = tagNumber;\n        this.value = new Uint8Array(0);\n    }\n    set boolean(value) {\n        this.value = new Uint8Array(1);\n        this.value[0] = (value ? 0xFF : 0x00);\n    }\n    get boolean() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("BOOLEAN cannot be constructed.");\n        if (this.value.length !== 1)\n            throw new ASN1SizeError("BOOLEAN not one byte");\n        return (this.value[0] !== 0);\n    }\n    set bitString(value) {\n        if (value.length === 0)\n            this.value = new Uint8Array(0);\n        let pre = [];\n        pre.length = ((value.length >>> 3) + ((value.length % 8) ? 1 : 0)) + 1;\n        for (let i = 0; i < value.length; i++) {\n            if (value[i] === false)\n                continue;\n            pre[((i >>> 3) + 1)] |= (0b10000000 >>> (i % 8));\n        }\n        pre[0] = (8 - (value.length % 8));\n        if (pre[0] === 8)\n            pre[0] = 0;\n        this.value = new Uint8Array(pre);\n    }\n    get bitString() {\n        if (this.construction === 0) {\n            if (this.value.length === 0)\n                throw new ASN1Error("ASN.1 BIT STRING cannot be encoded on zero bytes!");\n            if (this.value.length === 1 && this.value[0] !== 0)\n                throw new ASN1Error("ASN.1 BIT STRING encoded with deceptive first byte!");\n            if (this.value[0] > 7)\n                throw new ASN1Error("First byte of an ASN.1 BIT STRING must be <= 7!");\n            let ret = [];\n            for (let i = 1; i < this.value.length; i++) {\n                ret = ret.concat([\n                    (this.value[i] & 0b10000000 ? true : false),\n                    (this.value[i] & 0b01000000 ? true : false),\n                    (this.value[i] & 0b00100000 ? true : false),\n                    (this.value[i] & 0b00010000 ? true : false),\n                    (this.value[i] & 0b00001000 ? true : false),\n                    (this.value[i] & 0b00000100 ? true : false),\n                    (this.value[i] & 0b00000010 ? true : false),\n                    (this.value[i] & 0b00000001 ? true : false)\n                ]);\n            }\n            ret.length -= this.value[0];\n            return ret;\n        }\n        else {\n            if ((this.recursionCount + 1) > ber_BERElement.nestingRecursionLimit)\n                throw new ASN1RecursionError();\n            let appendy = [];\n            const substrings = this.sequence;\n            substrings.slice(0, (substrings.length - 1)).forEach(substring => {\n                if (substring.construction === 0 &&\n                    substring.value.length > 0 &&\n                    substring.value[0] !== 0x00)\n                    throw new ASN1Error(`Only the last subelement of a constructed BIT STRING may have a non-zero first value byte.`);\n            });\n            substrings.forEach(substring => {\n                if (substring.tagClass !== this.tagClass)\n                    throw new ASN1ConstructionError(`Invalid tag class in recursively-encoded BIT STRING.`);\n                if (substring.tagNumber !== this.tagNumber)\n                    throw new ASN1ConstructionError(`Invalid tag class in recursively-encoded BIT STRING.`);\n                substring.recursionCount = (this.recursionCount + 1);\n                appendy = appendy.concat(substring.bitString);\n            });\n            return appendy;\n        }\n    }\n    set octetString(value) {\n        this.value = new Uint8Array(value);\n    }\n    get octetString() {\n        return this.deconstruct("OCTET STRING");\n    }\n    set objectDescriptor(value) {\n        this.graphicString = value;\n    }\n    get objectDescriptor() {\n        return this.graphicString;\n    }\n    set real(value) {\n        if (value === 0.0) {\n            this.value = new Uint8Array(0);\n            return;\n        }\n        else if (isNaN(value)) {\n            this.value = new Uint8Array([66]);\n            return;\n        }\n        else if (value === -0.0) {\n            this.value = new Uint8Array([67]);\n            return;\n        }\n        else if (value === Infinity) {\n            this.value = new Uint8Array([64]);\n            return;\n        }\n        else if (value === -Infinity) {\n            this.value = new Uint8Array([65]);\n            return;\n        }\n        let valueString = value.toFixed(7);\n        valueString = (String.fromCharCode(0b00000011) + valueString);\n        this.value = (new TextEncoder()).encode(valueString);\n    }\n    get real() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("REAL cannot be constructed.");\n        if (this.value.length === 0)\n            return 0.0;\n        switch (this.value[0] & 0b11000000) {\n            case (0b01000000): {\n                if (this.value[0] === 66)\n                    return NaN;\n                if (this.value[0] === 67)\n                    return -0.0;\n                if (this.value[0] === 64)\n                    return Infinity;\n                if (this.value[0] === 65)\n                    return -Infinity;\n                throw new ASN1UndefinedError("Unrecognized special REAL value!");\n            }\n            case (0b00000000): {\n                let realString;\n                if (typeof TextEncoder !== "undefined") {\n                    realString = (new TextDecoder("utf-8")).decode(this.value.slice(1));\n                }\n                else if (typeof Buffer !== "undefined") {\n                    realString = (new Buffer(this.value.slice(1))).toString("utf-8");\n                }\n                else {\n                    throw new ASN1Error("No ability to decode bytes to string!");\n                }\n                switch (this.value[0] & 0b00111111) {\n                    case 1: {\n                        if (!nr1Regex.test(realString))\n                            throw new ASN1Error("Malformed NR1 Base-10 REAL");\n                        return parseFloat(realString);\n                    }\n                    case 2: {\n                        if (!nr2Regex.test(realString))\n                            throw new ASN1Error("Malformed NR2 Base-10 REAL");\n                        return parseFloat(realString.replace(",", "."));\n                    }\n                    case 3: {\n                        if (!nr3Regex.test(realString))\n                            throw new ASN1Error("Malformed NR3 Base-10 REAL");\n                        return parseFloat(realString.replace(",", "."));\n                    }\n                    default:\n                        throw new ASN1UndefinedError("Undefined Base-10 REAL encoding.");\n                }\n            }\n            case (0b10000000):\n            case (0b11000000): {\n                const sign = ((this.value[0] & 0b01000000) ? -1 : 1);\n                const base = ((flag) => {\n                    switch (flag) {\n                        case (0): return 2;\n                        case (16): return 8;\n                        case (32): return 16;\n                        default:\n                            throw new ASN1Error("Impossible REAL encoding base encountered.");\n                    }\n                })(this.value[0] & 0b00110000);\n                const scale = ((flag) => {\n                    switch (flag) {\n                        case (0): return 0;\n                        case (4): return 1;\n                        case (8): return 2;\n                        case (12): return 3;\n                        default:\n                            throw new ASN1Error("Impossible REAL encoding scale encountered.");\n                    }\n                })(this.value[0] & 0b00001100);\n                let exponent;\n                let mantissa;\n                switch (this.value[0] & 0b00000011) {\n                    case (0b00000000): {\n                        if (this.value.length < 3)\n                            throw new ASN1TruncationError("Binary-encoded REAL truncated.");\n                        exponent = asn1_ASN1Element.decodeSignedBigEndianInteger(this.value.subarray(1, 2));\n                        mantissa = asn1_ASN1Element.decodeUnsignedBigEndianInteger(this.value.subarray(2));\n                        break;\n                    }\n                    case (0b00000001): {\n                        if (this.value.length < 4)\n                            throw new ASN1TruncationError("Binary-encoded REAL truncated.");\n                        exponent = asn1_ASN1Element.decodeSignedBigEndianInteger(this.value.subarray(1, 3));\n                        mantissa = asn1_ASN1Element.decodeUnsignedBigEndianInteger(this.value.subarray(3));\n                        break;\n                    }\n                    case (0b00000010): {\n                        if (this.value.length < 5)\n                            throw new ASN1TruncationError("Binary-encoded REAL truncated.");\n                        exponent = asn1_ASN1Element.decodeSignedBigEndianInteger(this.value.subarray(1, 4));\n                        mantissa = asn1_ASN1Element.decodeUnsignedBigEndianInteger(this.value.subarray(4));\n                        break;\n                    }\n                    case (0b00000011): {\n                        if (this.value.length < 3)\n                            throw new ASN1TruncationError("Binary-encoded REAL truncated.");\n                        let exponentLength = this.value[1];\n                        if (this.value.length < (3 + exponentLength))\n                            throw new ASN1TruncationError("Binary-encoded REAL truncated.");\n                        exponent = asn1_ASN1Element.decodeSignedBigEndianInteger(this.value.subarray(2, (2 + exponentLength)));\n                        mantissa = asn1_ASN1Element.decodeUnsignedBigEndianInteger(this.value.subarray((2 + exponentLength)));\n                        break;\n                    }\n                    default:\n                        throw new ASN1Error("Impossible binary REAL exponent encoding encountered.");\n                }\n                return (sign * mantissa * Math.pow(2, scale) * Math.pow(base, exponent));\n            }\n            default:\n                throw new ASN1Error("Impossible REAL format encountered.");\n        }\n    }\n    set utf8String(value) {\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get utf8String() {\n        const valueBytes = this.deconstruct("UTF8String");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        return ret;\n    }\n    set sequence(value) {\n        let encodedElements = [];\n        value.forEach(element => {\n            encodedElements.push(element.toBytes());\n        });\n        let totalLength = 0;\n        encodedElements.forEach(element => {\n            totalLength += element.length;\n        });\n        const newValue = new Uint8Array(totalLength);\n        let currentIndex = 0;\n        encodedElements.forEach(element => {\n            newValue.set(element, currentIndex);\n            currentIndex += element.length;\n        });\n        this.value = newValue;\n        this.construction = 1;\n    }\n    get sequence() {\n        if (this.construction !== 1)\n            throw new ASN1ConstructionError("SET or SEQUENCE cannot be primitively constructed.");\n        let encodedElements = [];\n        if (this.value.length === 0)\n            return [];\n        let i = 0;\n        while (i < this.value.length) {\n            const next = new ber_BERElement();\n            i += next.fromBytes(this.value.slice(i));\n            encodedElements.push(next);\n        }\n        return encodedElements;\n    }\n    set set(value) {\n        this.sequence = value;\n    }\n    get set() {\n        return this.sequence;\n    }\n    set numericString(value) {\n        for (let i = 0; i < value.length; i++) {\n            const characterCode = value.charCodeAt(i);\n            if (!((characterCode >= 0x30 && characterCode <= 0x39) || characterCode === 0x20)) {\n                throw new ASN1CharactersError("NumericString can only contain characters 0 - 9 and space.");\n            }\n        }\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get numericString() {\n        const valueBytes = this.deconstruct("NumericString");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        for (let i = 0; i < ret.length; i++) {\n            const characterCode = ret.charCodeAt(i);\n            if (!((characterCode >= 0x30 && characterCode <= 0x39) || characterCode === 0x20)) {\n                throw new ASN1CharactersError("NumericString can only contain characters 0 - 9 and space.");\n            }\n        }\n        return ret;\n    }\n    set printableString(value) {\n        for (let i = 0; i < value.length; i++) {\n            if (printableStringCharacters.indexOf(value.charAt(i)) === -1) {\n                throw new ASN1CharactersError(`PrintableString can only contain these characters: ${printableStringCharacters}`);\n            }\n        }\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get printableString() {\n        const valueBytes = this.deconstruct("PrintableString");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        for (let i = 0; i < ret.length; i++) {\n            if (printableStringCharacters.indexOf(ret.charAt(i)) === -1) {\n                throw new ASN1CharactersError(`PrintableString can only contain these characters: ${printableStringCharacters}`);\n            }\n        }\n        return ret;\n    }\n    set teletexString(value) {\n        this.value = new Uint8Array(value);\n    }\n    get teletexString() {\n        return this.deconstruct("TeletexString");\n    }\n    set videotexString(value) {\n        this.value = new Uint8Array(value);\n    }\n    get videotexString() {\n        return this.deconstruct("VideotexString");\n    }\n    set ia5String(value) {\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get ia5String() {\n        const valueBytes = this.deconstruct("IA5String");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        return ret;\n    }\n    set utcTime(value) {\n        let year = value.getUTCFullYear().toString();\n        year = (year.substring(year.length - 2, year.length));\n        const month = (value.getUTCMonth() < 9 ? `0${value.getUTCMonth() + 1}` : `${value.getUTCMonth() + 1}`);\n        const day = (value.getUTCDate() < 10 ? `0${value.getUTCDate()}` : `${value.getUTCDate()}`);\n        const hour = (value.getUTCHours() < 10 ? `0${value.getUTCHours()}` : `${value.getUTCHours()}`);\n        const minute = (value.getUTCMinutes() < 10 ? `0${value.getUTCMinutes()}` : `${value.getUTCMinutes()}`);\n        const second = (value.getUTCSeconds() < 10 ? `0${value.getUTCSeconds()}` : `${value.getUTCSeconds()}`);\n        const utcString = `${year}${month}${day}${hour}${minute}${second}Z`;\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(utcString);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(utcString, "utf-8");\n        }\n    }\n    get utcTime() {\n        const valueBytes = this.deconstruct("UTCTime");\n        let dateString = "";\n        if (typeof TextEncoder !== "undefined") {\n            dateString = (new TextDecoder("utf-8")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            dateString = (new Buffer(this.value)).toString("utf-8");\n        }\n        const match = utcTimeRegex.exec(dateString);\n        if (match === null)\n            throw new ASN1Error("Malformed UTCTime string.");\n        if (match.groups === undefined)\n            throw new ASN1Error("Malformed UTCTime string.");\n        const ret = new Date();\n        let year = Number(match.groups.year);\n        year = (year < 70 ? (2000 + year) : (1900 + year));\n        const month = (Number(match.groups.month) - 1);\n        const date = Number(match.groups.date);\n        const hours = Number(match.groups.hour);\n        const minutes = Number(match.groups.minute);\n        const seconds = Number(match.groups.second);\n        ber_BERElement.validateDateTime("UTCTime", year, month, date, hours, minutes, seconds);\n        ret.setUTCFullYear(year);\n        ret.setUTCMonth(month);\n        ret.setUTCDate(date);\n        ret.setUTCHours(hours);\n        ret.setUTCMinutes(minutes);\n        ret.setUTCSeconds(seconds);\n        return ret;\n    }\n    set generalizedTime(value) {\n        const year = value.getUTCFullYear().toString();\n        const month = (value.getUTCMonth() < 9 ? `0${value.getUTCMonth() + 1}` : `${value.getUTCMonth() + 1}`);\n        const day = (value.getUTCDate() < 10 ? `0${value.getUTCDate()}` : `${value.getUTCDate()}`);\n        const hour = (value.getUTCHours() < 10 ? `0${value.getUTCHours()}` : `${value.getUTCHours()}`);\n        const minute = (value.getUTCMinutes() < 10 ? `0${value.getUTCMinutes()}` : `${value.getUTCMinutes()}`);\n        const second = (value.getUTCSeconds() < 10 ? `0${value.getUTCSeconds()}` : `${value.getUTCSeconds()}`);\n        const timeString = `${year}${month}${day}${hour}${minute}${second}Z`;\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(timeString);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(timeString, "utf-8");\n        }\n    }\n    get generalizedTime() {\n        const valueBytes = this.deconstruct("GeneralizedTime");\n        let dateString = "";\n        if (typeof TextEncoder !== "undefined") {\n            dateString = (new TextDecoder("utf-8")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            dateString = (new Buffer(this.value)).toString("utf-8");\n        }\n        const match = generalizedTimeRegex.exec(dateString);\n        if (match === null)\n            throw new ASN1Error("Malformed GeneralizedTime string.");\n        if (match.groups === undefined)\n            throw new ASN1Error("Malformed GeneralizedTime string.");\n        const ret = new Date();\n        const year = Number(match.groups.year);\n        const month = (Number(match.groups.month) - 1);\n        const date = Number(match.groups.date);\n        const hours = Number(match.groups.hour);\n        const minutes = Number(match.groups.minute);\n        const seconds = Number(match.groups.second);\n        ber_BERElement.validateDateTime("GeneralizedTime", year, month, date, hours, minutes, seconds);\n        ret.setUTCFullYear(year);\n        ret.setUTCMonth(month);\n        ret.setUTCDate(date);\n        ret.setUTCHours(hours);\n        ret.setUTCMinutes(minutes);\n        ret.setUTCSeconds(seconds);\n        return ret;\n    }\n    set graphicString(value) {\n        for (let i = 0; i < value.length; i++) {\n            const characterCode = value.charCodeAt(i);\n            if (characterCode < 0x20 || characterCode > 0x7E)\n                throw new ASN1CharactersError("GraphicString, VisibleString, or ObjectDescriptor " +\n                    "can only contain characters between 0x20 and 0x7E.");\n        }\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get graphicString() {\n        const valueBytes = this.deconstruct("GraphicString, VisibleString, or ObjectDescriptor");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        for (let i = 0; i < ret.length; i++) {\n            const characterCode = ret.charCodeAt(i);\n            if (characterCode < 0x20 || characterCode > 0x7E) {\n                throw new ASN1CharactersError("GraphicString, VisibleString, or ObjectDescriptor " +\n                    "can only contain characters between 0x20 and 0x7E.");\n            }\n        }\n        return ret;\n    }\n    set visibleString(value) {\n        this.graphicString = value;\n    }\n    get visibleString() {\n        return this.graphicString;\n    }\n    set generalString(value) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) > 0x7F)\n                throw new ASN1CharactersError("GeneralString can only contain ASCII characters.");\n        }\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "ascii");\n        }\n    }\n    get generalString() {\n        const valueBytes = this.deconstruct("GeneralString");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("windows-1252")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("ascii");\n        }\n        for (let i = 0; i < ret.length; i++) {\n            if (ret.charCodeAt(i) > 0x7F)\n                throw new ASN1CharactersError("GeneralString can only contain ASCII characters.");\n        }\n        return ret;\n    }\n    set universalString(value) {\n        const buf = new Uint8Array(value.length << 2);\n        for (let i = 0; i < value.length; i++) {\n            buf[(i << 2)] = value.charCodeAt(i) >>> 24;\n            buf[(i << 2) + 1] = value.charCodeAt(i) >>> 16;\n            buf[(i << 2) + 2] = value.charCodeAt(i) >>> 8;\n            buf[(i << 2) + 3] = value.charCodeAt(i);\n        }\n        this.value = buf;\n    }\n    get universalString() {\n        const valueBytes = this.deconstruct("UniversalString");\n        if (valueBytes.length % 4)\n            throw new ASN1Error("UniversalString encoded on non-mulitple of four bytes.");\n        let ret = "";\n        for (let i = 0; i < valueBytes.length; i += 4) {\n            ret += String.fromCharCode((valueBytes[i + 0] << 24) +\n                (valueBytes[i + 1] << 16) +\n                (valueBytes[i + 2] << 8) +\n                (valueBytes[i + 3] << 0));\n        }\n        return ret;\n    }\n    set bmpString(value) {\n        const buf = new Uint8Array(value.length << 1);\n        for (let i = 0, strLen = value.length; i < strLen; i++) {\n            buf[(i << 1)] = value.charCodeAt(i) >>> 8;\n            buf[(i << 1) + 1] = value.charCodeAt(i);\n        }\n        this.value = buf;\n    }\n    get bmpString() {\n        const valueBytes = this.deconstruct("BMPString");\n        if (valueBytes.length % 2)\n            throw new ASN1Error("BMPString encoded on non-mulitple of two bytes.");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-16be")).decode(valueBytes.buffer);\n        }\n        else if (typeof Buffer !== "undefined") {\n            const swappedEndianness = new Uint8Array(valueBytes.length);\n            for (let i = 0; i < valueBytes.length; i += 2) {\n                swappedEndianness[i] = valueBytes[i + 1];\n                swappedEndianness[i + 1] = valueBytes[i];\n            }\n            ret = (new Buffer(swappedEndianness)).toString("utf-16le");\n        }\n        return ret;\n    }\n    fromBytes(bytes) {\n        if (bytes.length < 2)\n            throw new ASN1TruncationError("Tried to decode a BER element that is less than two bytes.");\n        if ((this.recursionCount + 1) > ber_BERElement.nestingRecursionLimit)\n            throw new ASN1RecursionError();\n        let cursor = 0;\n        switch (bytes[cursor] & 0b11000000) {\n            case (0b00000000):\n                this.tagClass = 0;\n                break;\n            case (0b01000000):\n                this.tagClass = 1;\n                break;\n            case (0b10000000):\n                this.tagClass = 2;\n                break;\n            case (0b11000000):\n                this.tagClass = 3;\n                break;\n            default: this.tagClass = 0;\n        }\n        this.construction = ((bytes[cursor] & 0b00100000) ?\n            1 : 0);\n        this.tagNumber = (bytes[cursor] & 0b00011111);\n        cursor++;\n        if (this.tagNumber >= 31) {\n            if (bytes[cursor] === 0b10000000)\n                throw new ASN1PaddingError("Leading padding byte on long tag number encoding.");\n            this.tagNumber = 0;\n            const limit = (((bytes.length - 1) >= 4) ? 4 : (bytes.length - 1));\n            while (cursor < limit) {\n                if (!(bytes[cursor++] & 0b10000000))\n                    break;\n            }\n            if (bytes[cursor - 1] & 0b10000000) {\n                if (limit === bytes.length - 1) {\n                    throw new ASN1TruncationError("ASN.1 tag number appears to have been truncated.");\n                }\n                else\n                    throw new ASN1OverflowError("ASN.1 tag number too large.");\n            }\n            for (let i = 1; i < cursor; i++) {\n                this.tagNumber <<= 7;\n                this.tagNumber |= (bytes[i] & 0x7F);\n            }\n            if (this.tagNumber <= 31)\n                throw new ASN1Error("ASN.1 tag number could have been encoded in short form.");\n        }\n        if ((bytes[cursor] & 0b10000000) === 0b10000000) {\n            const numberOfLengthOctets = (bytes[cursor] & 0x7F);\n            if (numberOfLengthOctets) {\n                if (numberOfLengthOctets === 0b01111111)\n                    throw new ASN1UndefinedError("Length byte with undefined meaning encountered.");\n                if (numberOfLengthOctets > 4)\n                    throw new ASN1OverflowError("Element length too long to decode to an integer.");\n                if (cursor + numberOfLengthOctets >= bytes.length)\n                    throw new ASN1TruncationError("Element length bytes appear to have been truncated.");\n                cursor++;\n                const lengthNumberOctets = new Uint8Array(4);\n                for (let i = numberOfLengthOctets; i > 0; i--) {\n                    lengthNumberOctets[(4 - i)] = bytes[(cursor + numberOfLengthOctets - i)];\n                }\n                let length = 0;\n                lengthNumberOctets.forEach(octet => {\n                    length <<= 8;\n                    length += octet;\n                });\n                if ((cursor + length) < cursor)\n                    throw new ASN1OverflowError("ASN.1 element too large.");\n                cursor += (numberOfLengthOctets);\n                if ((cursor + length) > bytes.length)\n                    throw new ASN1TruncationError("ASN.1 element truncated.");\n                this.value = bytes.slice(cursor, (cursor + length));\n                return (cursor + length);\n            }\n            else {\n                if (this.construction !== 1)\n                    throw new ASN1ConstructionError("Indefinite length ASN.1 element was not of constructed construction.");\n                const startOfValue = ++cursor;\n                let sentinel = cursor;\n                while (sentinel < bytes.length) {\n                    const child = new ber_BERElement();\n                    child.recursionCount = (this.recursionCount + 1);\n                    sentinel += child.fromBytes(bytes.slice(sentinel));\n                    if (child.tagClass === 0 &&\n                        child.construction === 0 &&\n                        child.tagNumber === 0 &&\n                        child.value.length === 0)\n                        break;\n                }\n                if (sentinel === bytes.length && (bytes[sentinel - 1] !== 0x00 || bytes[sentinel - 2] !== 0x00))\n                    throw new ASN1TruncationError("No END OF CONTENT element found at the end of indefinite length ASN.1 element.");\n                this.value = bytes.slice(startOfValue, (sentinel - 2));\n                return sentinel;\n            }\n        }\n        else {\n            const length = (bytes[cursor++] & 0x7F);\n            if ((cursor + length) > bytes.length)\n                throw new ASN1TruncationError("ASN.1 element was truncated.");\n            this.value = bytes.slice(cursor, (cursor + length));\n            return (cursor + length);\n        }\n    }\n    toBytes() {\n        let tagBytes = [0x00];\n        tagBytes[0] |= (this.tagClass << 6);\n        tagBytes[0] |= (this.construction << 5);\n        if (this.tagNumber < 31) {\n            tagBytes[0] |= this.tagNumber;\n        }\n        else {\n            tagBytes[0] |= 0b00011111;\n            let number = this.tagNumber;\n            let encodedNumber = [];\n            while (number !== 0) {\n                encodedNumber.unshift(number & 0x7F);\n                number >>>= 7;\n                encodedNumber[0] |= 0b10000000;\n            }\n            encodedNumber[encodedNumber.length - 1] &= 0b01111111;\n            tagBytes = tagBytes.concat(encodedNumber);\n        }\n        let lengthOctets = [0x00];\n        switch (ber_BERElement.lengthEncodingPreference) {\n            case (0): {\n                if (this.value.length < 127) {\n                    lengthOctets = [this.value.length];\n                }\n                else {\n                    let length = this.value.length;\n                    lengthOctets = [0, 0, 0, 0];\n                    for (let i = 0; i < 4; i++) {\n                        lengthOctets[i] = ((length >>> ((3 - i) << 3)) & 0xFF);\n                    }\n                    let startOfNonPadding = 0;\n                    for (let i = 0; i < (lengthOctets.length - 1); i++) {\n                        if (lengthOctets[i] === 0x00)\n                            startOfNonPadding++;\n                    }\n                    lengthOctets = lengthOctets.slice(startOfNonPadding);\n                    lengthOctets.unshift(0b10000000 | lengthOctets.length);\n                }\n                break;\n            }\n            case (1): {\n                lengthOctets = [0b10000000];\n                break;\n            }\n            default:\n                throw new ASN1UndefinedError("Invalid LengthEncodingPreference encountered!");\n        }\n        const ret = new Uint8Array(tagBytes.length +\n            lengthOctets.length +\n            this.value.length +\n            (ber_BERElement.lengthEncodingPreference === 1 ? 2 : 0));\n        ret.set(tagBytes, 0);\n        ret.set(lengthOctets, tagBytes.length);\n        ret.set(this.value, (tagBytes.length + lengthOctets.length));\n        return ret;\n    }\n    deconstruct(dataType) {\n        if (this.construction === 0) {\n            return new Uint8Array(this.value);\n        }\n        else {\n            if ((this.recursionCount + 1) > ber_BERElement.nestingRecursionLimit)\n                throw new ASN1RecursionError();\n            let appendy = [];\n            const substrings = this.sequence;\n            substrings.forEach(substring => {\n                if (substring.tagClass !== this.tagClass)\n                    throw new ASN1ConstructionError(`Invalid tag class in recursively-encoded ${dataType}.`);\n                if (substring.tagNumber !== this.tagNumber)\n                    throw new ASN1ConstructionError(`Invalid tag class in recursively-encoded ${dataType}.`);\n                substring.recursionCount = (this.recursionCount + 1);\n                appendy = appendy.concat(substring.deconstruct(dataType));\n            });\n            let totalLength = 0;\n            appendy.forEach(substring => {\n                totalLength += substring.length;\n            });\n            const whole = new Uint8Array(totalLength);\n            let currentIndex = 0;\n            appendy.forEach(substring => {\n                whole.set(substring, currentIndex);\n                currentIndex += substring.length;\n            });\n            return whole;\n        }\n    }\n}\nber_BERElement.lengthEncodingPreference = 0;\n\n// CONCATENATED MODULE: ./source/codecs/der.ts\n\n\n\n\nclass der_DERElement extends x690_X690Element {\n    set boolean(value) {\n        this.value = new Uint8Array(1);\n        this.value[0] = (value ? 0xFF : 0x00);\n    }\n    get boolean() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("BOOLEAN cannot be constructed.");\n        if (this.value.length !== 1)\n            throw new ASN1SizeError("BOOLEAN not one byte");\n        if ((this.value[0] !== 0x00) && (this.value[0] !== 0xFF))\n            throw new ASN1Error("BOOLEAN must be encoded as 0xFF or 0x00.");\n        return (this.value[0] !== 0);\n    }\n    set bitString(value) {\n        if (value.length === 0)\n            this.value = new Uint8Array(0);\n        let pre = [];\n        pre.length = ((value.length >>> 3) + ((value.length % 8) ? 1 : 0)) + 1;\n        for (let i = 0; i < value.length; i++) {\n            if (value[i] === false)\n                continue;\n            pre[((i >>> 3) + 1)] |= (0b10000000 >>> (i % 8));\n        }\n        pre[0] = (8 - (value.length % 8));\n        if (pre[0] === 8)\n            pre[0] = 0;\n        this.value = new Uint8Array(pre);\n    }\n    get bitString() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("BIT STRING cannot be constructed.");\n        if (this.value.length === 0)\n            throw new ASN1Error("ASN.1 BIT STRING cannot be encoded on zero bytes!");\n        if (this.value.length === 1 && this.value[0] !== 0)\n            throw new ASN1Error("ASN.1 BIT STRING encoded with deceptive first byte!");\n        if (this.value[0] > 7)\n            throw new ASN1Error("First byte of an ASN.1 BIT STRING must be <= 7!");\n        let ret = [];\n        for (let i = 1; i < this.value.length; i++) {\n            ret = ret.concat([\n                (this.value[i] & 0b10000000 ? true : false),\n                (this.value[i] & 0b01000000 ? true : false),\n                (this.value[i] & 0b00100000 ? true : false),\n                (this.value[i] & 0b00010000 ? true : false),\n                (this.value[i] & 0b00001000 ? true : false),\n                (this.value[i] & 0b00000100 ? true : false),\n                (this.value[i] & 0b00000010 ? true : false),\n                (this.value[i] & 0b00000001 ? true : false)\n            ]);\n        }\n        ret.slice((ret.length - this.value[0])).forEach(bit => {\n            if (bit)\n                throw new ASN1Error("BIT STRING had a trailing set bit.");\n        });\n        ret.length -= this.value[0];\n        return ret;\n    }\n    set octetString(value) {\n        this.value = new Uint8Array(value);\n    }\n    get octetString() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("OCTET STRING cannot be constructed.");\n        return new Uint8Array(this.value);\n    }\n    set objectDescriptor(value) {\n        this.graphicString = value;\n    }\n    get objectDescriptor() {\n        return this.graphicString;\n    }\n    set real(value) {\n        if (value === 0.0) {\n            this.value = new Uint8Array(0);\n            return;\n        }\n        else if (isNaN(value)) {\n            this.value = new Uint8Array([66]);\n            return;\n        }\n        else if (value === -0.0) {\n            this.value = new Uint8Array([67]);\n            return;\n        }\n        else if (value === Infinity) {\n            this.value = new Uint8Array([64]);\n            return;\n        }\n        else if (value === -Infinity) {\n            this.value = new Uint8Array([65]);\n            return;\n        }\n        let valueString = value.toFixed(7);\n        valueString = (String.fromCharCode(0b00000011) + valueString);\n        this.value = (new TextEncoder()).encode(valueString);\n    }\n    get real() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("REAL cannot be constructed.");\n        if (this.value.length === 0)\n            return 0.0;\n        switch (this.value[0] & 0b11000000) {\n            case (0b01000000): {\n                if (this.value[0] === 66)\n                    return NaN;\n                if (this.value[0] === 67)\n                    return -0.0;\n                if (this.value[0] === 64)\n                    return Infinity;\n                if (this.value[0] === 65)\n                    return -Infinity;\n                throw new ASN1UndefinedError("Unrecognized special REAL value!");\n            }\n            case (0b00000000): {\n                let realString;\n                if (typeof TextEncoder !== "undefined") {\n                    realString = (new TextDecoder("utf-8")).decode(this.value.slice(1));\n                }\n                else if (typeof Buffer !== "undefined") {\n                    realString = (new Buffer(this.value.slice(1))).toString("utf-8");\n                }\n                else {\n                    throw new ASN1Error("No ability to decode bytes to string!");\n                }\n                switch (this.value[0] & 0b00111111) {\n                    case 1:\n                    case 2:\n                        throw new ASN1Error("DER prohibits NR1 and NR2 Base-10 REAL");\n                    case 3: {\n                        if (!nr3Regex.test(realString))\n                            throw new ASN1Error("Malformed NR3 Base-10 REAL");\n                        return parseFloat(realString.replace(",", "."));\n                    }\n                    default:\n                        throw new ASN1UndefinedError("Undefined Base-10 REAL encoding.");\n                }\n            }\n            case (0b10000000):\n            case (0b11000000): {\n                const sign = ((this.value[0] & 0b01000000) ? -1 : 1);\n                const base = ((flag) => {\n                    switch (flag) {\n                        case (0): return 2;\n                        case (16): return 8;\n                        case (32): return 16;\n                        default:\n                            throw new ASN1Error("Impossible REAL encoding base encountered.");\n                    }\n                })(this.value[0] & 0b00110000);\n                const scale = ((flag) => {\n                    switch (flag) {\n                        case (0): return 0;\n                        case (4): return 1;\n                        case (8): return 2;\n                        case (12): return 3;\n                        default:\n                            throw new ASN1Error("Impossible REAL encoding scale encountered.");\n                    }\n                })(this.value[0] & 0b00001100);\n                let exponent;\n                let mantissa;\n                switch (this.value[0] & 0b00000011) {\n                    case (0b00000000): {\n                        if (this.value.length < 3)\n                            throw new ASN1TruncationError("Binary-encoded REAL truncated.");\n                        exponent = asn1_ASN1Element.decodeSignedBigEndianInteger(this.value.subarray(1, 2));\n                        mantissa = asn1_ASN1Element.decodeUnsignedBigEndianInteger(this.value.subarray(2));\n                        break;\n                    }\n                    case (0b00000001): {\n                        if (this.value.length < 4)\n                            throw new ASN1TruncationError("Binary-encoded REAL truncated.");\n                        exponent = asn1_ASN1Element.decodeSignedBigEndianInteger(this.value.subarray(1, 3));\n                        mantissa = asn1_ASN1Element.decodeUnsignedBigEndianInteger(this.value.subarray(3));\n                        if (exponent <= 127 && exponent >= -128)\n                            throw new ASN1Error("DER-encoded binary-encoded REAL could have encoded exponent on fewer octets.");\n                        break;\n                    }\n                    case (0b00000010):\n                    case (0b00000011): {\n                        throw new ASN1Error("DER-encoded binary REAL encoded in a way that would either overflow or encode on too many octets.");\n                    }\n                    default:\n                        throw new ASN1Error("Impossible binary REAL exponent encoding encountered.");\n                }\n                if (mantissa !== 0 && !(mantissa % 2))\n                    throw new ASN1Error("DER-encoded REAL may not have an even non-zero mantissa.");\n                return (sign * mantissa * Math.pow(2, scale) * Math.pow(base, exponent));\n            }\n            default:\n                throw new ASN1Error("Impossible REAL format encountered.");\n        }\n    }\n    set utf8String(value) {\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get utf8String() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("UTF8String cannot be constructed.");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        return ret;\n    }\n    set sequence(value) {\n        let encodedElements = [];\n        value.forEach(element => {\n            encodedElements.push(element.toBytes());\n        });\n        let totalLength = 0;\n        encodedElements.forEach(element => {\n            totalLength += element.length;\n        });\n        const newValue = new Uint8Array(totalLength);\n        let currentIndex = 0;\n        encodedElements.forEach(element => {\n            newValue.set(element, currentIndex);\n            currentIndex += element.length;\n        });\n        this.value = newValue;\n        this.construction = 1;\n    }\n    get sequence() {\n        if (this.construction !== 1)\n            throw new ASN1ConstructionError("SET or SEQUENCE cannot be primitively constructed.");\n        let encodedElements = [];\n        if (this.value.length === 0)\n            return [];\n        let i = 0;\n        while (i < this.value.length) {\n            const next = new der_DERElement();\n            i += next.fromBytes(this.value.slice(i));\n            encodedElements.push(next);\n        }\n        return encodedElements;\n    }\n    set set(value) {\n        this.sequence = value;\n    }\n    get set() {\n        return this.sequence;\n    }\n    set numericString(value) {\n        for (let i = 0; i < value.length; i++) {\n            const characterCode = value.charCodeAt(i);\n            if (!((characterCode >= 0x30 && characterCode <= 0x39) || characterCode === 0x20)) {\n                throw new ASN1CharactersError("NumericString can only contain characters 0 - 9 and space.");\n            }\n        }\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get numericString() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("NumericString cannot be constructed.");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        for (let i = 0; i < ret.length; i++) {\n            const characterCode = ret.charCodeAt(i);\n            if (!((characterCode >= 0x30 && characterCode <= 0x39) || characterCode === 0x20)) {\n                throw new ASN1CharactersError("NumericString can only contain characters 0 - 9 and space.");\n            }\n        }\n        return ret;\n    }\n    set printableString(value) {\n        for (let i = 0; i < value.length; i++) {\n            if (printableStringCharacters.indexOf(value.charAt(i)) === -1) {\n                throw new ASN1CharactersError(`PrintableString can only contain these characters: ${printableStringCharacters}`);\n            }\n        }\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get printableString() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("PrintableString cannot be constructed.");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        for (let i = 0; i < ret.length; i++) {\n            if (printableStringCharacters.indexOf(ret.charAt(i)) === -1) {\n                throw new ASN1CharactersError(`PrintableString can only contain these characters: ${printableStringCharacters}`);\n            }\n        }\n        return ret;\n    }\n    set teletexString(value) {\n        this.value = new Uint8Array(value);\n    }\n    get teletexString() {\n        return this.octetString;\n    }\n    set videotexString(value) {\n        this.value = new Uint8Array(value);\n    }\n    get videotexString() {\n        return this.octetString;\n    }\n    set ia5String(value) {\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get ia5String() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("IA5String cannot be constructed.");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        return ret;\n    }\n    set utcTime(value) {\n        let year = value.getUTCFullYear().toString();\n        year = (year.substring(year.length - 2, year.length));\n        const month = (value.getUTCMonth() < 9 ? `0${value.getUTCMonth() + 1}` : `${value.getUTCMonth() + 1}`);\n        const day = (value.getUTCDate() < 10 ? `0${value.getUTCDate()}` : `${value.getUTCDate()}`);\n        const hour = (value.getUTCHours() < 10 ? `0${value.getUTCHours()}` : `${value.getUTCHours()}`);\n        const minute = (value.getUTCMinutes() < 10 ? `0${value.getUTCMinutes()}` : `${value.getUTCMinutes()}`);\n        const second = (value.getUTCSeconds() < 10 ? `0${value.getUTCSeconds()}` : `${value.getUTCSeconds()}`);\n        const utcString = `${year}${month}${day}${hour}${minute}${second}Z`;\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(utcString);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(utcString, "utf-8");\n        }\n    }\n    get utcTime() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("UTCTime cannot be constructed.");\n        let dateString = "";\n        if (typeof TextEncoder !== "undefined") {\n            dateString = (new TextDecoder("utf-8")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            dateString = (new Buffer(this.value)).toString("utf-8");\n        }\n        const match = utcTimeRegex.exec(dateString);\n        if (match === null)\n            throw new ASN1Error("Malformed UTCTime string.");\n        if (match.groups === undefined)\n            throw new ASN1Error("Malformed UTCTime string.");\n        const ret = new Date();\n        let year = Number(match.groups.year);\n        year = (year < 70 ? (2000 + year) : (1900 + year));\n        const month = (Number(match.groups.month) - 1);\n        const date = Number(match.groups.date);\n        const hours = Number(match.groups.hour);\n        const minutes = Number(match.groups.minute);\n        const seconds = Number(match.groups.second);\n        der_DERElement.validateDateTime("UTCTime", year, month, date, hours, minutes, seconds);\n        ret.setUTCFullYear(year);\n        ret.setUTCMonth(month);\n        ret.setUTCDate(date);\n        ret.setUTCHours(hours);\n        ret.setUTCMinutes(minutes);\n        ret.setUTCSeconds(seconds);\n        return ret;\n    }\n    set generalizedTime(value) {\n        const year = value.getUTCFullYear().toString();\n        const month = (value.getUTCMonth() < 9 ? `0${value.getUTCMonth() + 1}` : `${value.getUTCMonth() + 1}`);\n        const day = (value.getUTCDate() < 10 ? `0${value.getUTCDate()}` : `${value.getUTCDate()}`);\n        const hour = (value.getUTCHours() < 10 ? `0${value.getUTCHours()}` : `${value.getUTCHours()}`);\n        const minute = (value.getUTCMinutes() < 10 ? `0${value.getUTCMinutes()}` : `${value.getUTCMinutes()}`);\n        const second = (value.getUTCSeconds() < 10 ? `0${value.getUTCSeconds()}` : `${value.getUTCSeconds()}`);\n        const timeString = `${year}${month}${day}${hour}${minute}${second}Z`;\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(timeString);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(timeString, "utf-8");\n        }\n    }\n    get generalizedTime() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("GeneralizedTime cannot be constructed.");\n        let dateString = "";\n        if (typeof TextEncoder !== "undefined") {\n            dateString = (new TextDecoder("utf-8")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            dateString = (new Buffer(this.value)).toString("utf-8");\n        }\n        const match = generalizedTimeRegex.exec(dateString);\n        if (match === null)\n            throw new ASN1Error("Malformed GeneralizedTime string.");\n        if (match.groups === undefined)\n            throw new ASN1Error("Malformed GeneralizedTime string.");\n        const ret = new Date();\n        const year = Number(match.groups.year);\n        const month = (Number(match.groups.month) - 1);\n        const date = Number(match.groups.date);\n        const hours = Number(match.groups.hour);\n        const minutes = Number(match.groups.minute);\n        const seconds = Number(match.groups.second);\n        der_DERElement.validateDateTime("GeneralizedTime", year, month, date, hours, minutes, seconds);\n        ret.setUTCFullYear(year);\n        ret.setUTCMonth(month);\n        ret.setUTCDate(date);\n        ret.setUTCHours(hours);\n        ret.setUTCMinutes(minutes);\n        ret.setUTCSeconds(seconds);\n        return ret;\n    }\n    set graphicString(value) {\n        for (let i = 0; i < value.length; i++) {\n            const characterCode = value.charCodeAt(i);\n            if (characterCode < 0x20 || characterCode > 0x7E)\n                throw new ASN1CharactersError("GraphicString, VisibleString, or ObjectDescriptor " +\n                    "can only contain characters between 0x20 and 0x7E.");\n        }\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "utf-8");\n        }\n    }\n    get graphicString() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("GraphicString cannot be constructed.");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-8")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("utf-8");\n        }\n        for (let i = 0; i < ret.length; i++) {\n            const characterCode = ret.charCodeAt(i);\n            if (characterCode < 0x20 || characterCode > 0x7E) {\n                throw new ASN1CharactersError("GraphicString, VisibleString, or ObjectDescriptor " +\n                    "can only contain characters between 0x20 and 0x7E.");\n            }\n        }\n        return ret;\n    }\n    set visibleString(value) {\n        this.graphicString = value;\n    }\n    get visibleString() {\n        return this.graphicString;\n    }\n    set generalString(value) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) > 0x7F)\n                throw new ASN1CharactersError("GeneralString can only contain ASCII characters.");\n        }\n        if (typeof TextEncoder !== "undefined") {\n            this.value = (new TextEncoder()).encode(value);\n        }\n        else if (typeof Buffer !== "undefined") {\n            this.value = Buffer.from(value, "ascii");\n        }\n    }\n    get generalString() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("GeneralString cannot be constructed.");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("windows-1252")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            ret = (new Buffer(this.value)).toString("ascii");\n        }\n        for (let i = 0; i < ret.length; i++) {\n            if (ret.charCodeAt(i) > 0x7F)\n                throw new ASN1CharactersError("GeneralString can only contain ASCII characters.");\n        }\n        return ret;\n    }\n    set universalString(value) {\n        const buf = new Uint8Array(value.length << 2);\n        for (let i = 0; i < value.length; i++) {\n            buf[(i << 2)] = value.charCodeAt(i) >>> 24;\n            buf[(i << 2) + 1] = value.charCodeAt(i) >>> 16;\n            buf[(i << 2) + 2] = value.charCodeAt(i) >>> 8;\n            buf[(i << 2) + 3] = value.charCodeAt(i);\n        }\n        this.value = buf;\n    }\n    get universalString() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("UniversalString cannot be constructed.");\n        if (this.value.length % 4)\n            throw new ASN1Error("UniversalString encoded on non-mulitple of four bytes.");\n        let ret = "";\n        for (let i = 0; i < this.value.length; i += 4) {\n            ret += String.fromCharCode((this.value[i + 0] << 24) +\n                (this.value[i + 1] << 16) +\n                (this.value[i + 2] << 8) +\n                (this.value[i + 3] << 0));\n        }\n        return ret;\n    }\n    set bmpString(value) {\n        const buf = new Uint8Array(value.length << 1);\n        for (let i = 0, strLen = value.length; i < strLen; i++) {\n            buf[(i << 1)] = value.charCodeAt(i) >>> 8;\n            buf[(i << 1) + 1] = value.charCodeAt(i);\n        }\n        this.value = buf;\n    }\n    get bmpString() {\n        if (this.construction !== 0)\n            throw new ASN1ConstructionError("BMPString cannot be constructed.");\n        if (this.value.length % 2)\n            throw new ASN1Error("BMPString encoded on non-mulitple of two bytes.");\n        let ret = "";\n        if (typeof TextEncoder !== "undefined") {\n            ret = (new TextDecoder("utf-16be")).decode(new Uint8Array(this.value));\n        }\n        else if (typeof Buffer !== "undefined") {\n            const swappedEndianness = new Uint8Array(this.value.length);\n            for (let i = 0; i < this.value.length; i += 2) {\n                swappedEndianness[i] = this.value[i + 1];\n                swappedEndianness[i + 1] = this.value[i];\n            }\n            ret = (new Buffer(swappedEndianness)).toString("utf-16le");\n        }\n        return ret;\n    }\n    constructor(tagClass = 0, construction = 0, tagNumber = 0) {\n        super();\n        this.tagClass = tagClass;\n        this.construction = construction;\n        this.tagNumber = tagNumber;\n        this.value = new Uint8Array(0);\n    }\n    fromBytes(bytes) {\n        if (bytes.length < 2)\n            throw new ASN1TruncationError("Tried to decode a DER element that is less than two bytes.");\n        if ((this.recursionCount + 1) > der_DERElement.nestingRecursionLimit)\n            throw new ASN1RecursionError();\n        let cursor = 0;\n        switch (bytes[cursor] & 0b11000000) {\n            case (0b00000000):\n                this.tagClass = 0;\n                break;\n            case (0b01000000):\n                this.tagClass = 1;\n                break;\n            case (0b10000000):\n                this.tagClass = 2;\n                break;\n            case (0b11000000):\n                this.tagClass = 3;\n                break;\n            default: this.tagClass = 0;\n        }\n        this.construction = ((bytes[cursor] & 0b00100000) ?\n            1 : 0);\n        this.tagNumber = (bytes[cursor] & 0b00011111);\n        cursor++;\n        if (this.tagNumber >= 31) {\n            if (bytes[cursor] === 0b10000000)\n                throw new ASN1PaddingError("Leading padding byte on long tag number encoding.");\n            this.tagNumber = 0;\n            const limit = (((bytes.length - 1) >= 4) ? 4 : (bytes.length - 1));\n            while (cursor < limit) {\n                if (!(bytes[cursor++] & 0b10000000))\n                    break;\n            }\n            if (bytes[cursor - 1] & 0b10000000) {\n                if (limit === bytes.length - 1) {\n                    throw new ASN1TruncationError("ASN.1 tag number appears to have been truncated.");\n                }\n                else\n                    throw new ASN1OverflowError("ASN.1 tag number too large.");\n            }\n            for (let i = 1; i < cursor; i++) {\n                this.tagNumber <<= 7;\n                this.tagNumber |= (bytes[i] & 0x7F);\n            }\n            if (this.tagNumber <= 31)\n                throw new ASN1Error("ASN.1 tag number could have been encoded in short form.");\n        }\n        if ((bytes[cursor] & 0b10000000) === 0b10000000) {\n            const numberOfLengthOctets = (bytes[cursor] & 0x7F);\n            if (numberOfLengthOctets === 0b01111111)\n                throw new ASN1UndefinedError("Length byte with undefined meaning encountered.");\n            if (numberOfLengthOctets > 4)\n                throw new ASN1OverflowError("Element length too long to decode to an integer.");\n            if (cursor + numberOfLengthOctets >= bytes.length)\n                throw new ASN1TruncationError("Element length bytes appear to have been truncated.");\n            cursor++;\n            const lengthNumberOctets = new Uint8Array(4);\n            for (let i = numberOfLengthOctets; i > 0; i--) {\n                lengthNumberOctets[(4 - i)] = bytes[(cursor + numberOfLengthOctets - i)];\n            }\n            let length = 0;\n            lengthNumberOctets.forEach(octet => {\n                length <<= 8;\n                length += octet;\n            });\n            if ((cursor + length) < cursor)\n                throw new ASN1OverflowError("ASN.1 element too large.");\n            cursor += (numberOfLengthOctets);\n            if ((cursor + length) > bytes.length)\n                throw new ASN1TruncationError("ASN.1 element truncated.");\n            if (((length <= 127 && length >= -128) && numberOfLengthOctets > 1) ||\n                ((length <= 32767 && length >= -32768) && numberOfLengthOctets > 2) ||\n                ((length <= 8388607 && length >= -8388608) && numberOfLengthOctets > 3))\n                throw new ASN1PaddingError("DER-encoded long-form length encoded on more octets than necessary");\n            this.value = bytes.slice(cursor, (cursor + length));\n            return (cursor + length);\n        }\n        else {\n            const length = (bytes[cursor++] & 0x7F);\n            if ((cursor + length) > bytes.length)\n                throw new ASN1TruncationError("ASN.1 element was truncated.");\n            this.value = bytes.slice(cursor, (cursor + length));\n            return (cursor + length);\n        }\n    }\n    toBytes() {\n        let tagBytes = [0x00];\n        tagBytes[0] |= (this.tagClass << 6);\n        tagBytes[0] |= (this.construction << 5);\n        if (this.tagNumber < 31) {\n            tagBytes[0] |= this.tagNumber;\n        }\n        else {\n            tagBytes[0] |= 0b00011111;\n            let number = this.tagNumber;\n            let encodedNumber = [];\n            while (number !== 0) {\n                encodedNumber.unshift(number & 0x7F);\n                number >>>= 7;\n                encodedNumber[0] |= 0b10000000;\n            }\n            encodedNumber[encodedNumber.length - 1] &= 0b01111111;\n            tagBytes = tagBytes.concat(encodedNumber);\n        }\n        let lengthOctets = [0x00];\n        if (this.value.length < 127) {\n            lengthOctets = [this.value.length];\n        }\n        else {\n            let length = this.value.length;\n            lengthOctets = [0, 0, 0, 0];\n            for (let i = 0; i < 4; i++) {\n                lengthOctets[i] = ((length >>> ((3 - i) << 3)) & 0xFF);\n            }\n            let startOfNonPadding = 0;\n            for (let i = 0; i < (lengthOctets.length - 1); i++) {\n                if (lengthOctets[i] === 0x00)\n                    startOfNonPadding++;\n            }\n            lengthOctets = lengthOctets.slice(startOfNonPadding);\n            lengthOctets.unshift(0b10000000 | lengthOctets.length);\n        }\n        const ret = new Uint8Array(tagBytes.length +\n            lengthOctets.length +\n            this.value.length);\n        ret.set(tagBytes, 0);\n        ret.set(lengthOctets, tagBytes.length);\n        ret.set(this.value, (tagBytes.length + lengthOctets.length));\n        return ret;\n    }\n}\n\n// CONCATENATED MODULE: ./source/types/typeidentifier.ts\nclass TypeIdentifier {\n    constructor(id, type) {\n        this.id = id;\n        this.type = type;\n    }\n}\n\n// CONCATENATED MODULE: ./source/index.ts\n/* concated harmony reexport ASN1Element */__webpack_require__.d(__webpack_exports__, "ASN1Element", function() { return asn1_ASN1Element; });\n/* concated harmony reexport BERElement */__webpack_require__.d(__webpack_exports__, "BERElement", function() { return ber_BERElement; });\n/* concated harmony reexport DERElement */__webpack_require__.d(__webpack_exports__, "DERElement", function() { return der_DERElement; });\n/* concated harmony reexport ASN1Error */__webpack_require__.d(__webpack_exports__, "ASN1Error", function() { return ASN1Error; });\n/* concated harmony reexport ASN1NotImplementedError */__webpack_require__.d(__webpack_exports__, "ASN1NotImplementedError", function() { return ASN1NotImplementedError; });\n/* concated harmony reexport ASN1RecursionError */__webpack_require__.d(__webpack_exports__, "ASN1RecursionError", function() { return ASN1RecursionError; });\n/* concated harmony reexport ASN1TruncationError */__webpack_require__.d(__webpack_exports__, "ASN1TruncationError", function() { return ASN1TruncationError; });\n/* concated harmony reexport ASN1OverflowError */__webpack_require__.d(__webpack_exports__, "ASN1OverflowError", function() { return ASN1OverflowError; });\n/* concated harmony reexport ASN1SizeError */__webpack_require__.d(__webpack_exports__, "ASN1SizeError", function() { return ASN1SizeError; });\n/* concated harmony reexport ASN1PaddingError */__webpack_require__.d(__webpack_exports__, "ASN1PaddingError", function() { return ASN1PaddingError; });\n/* concated harmony reexport ASN1UndefinedError */__webpack_require__.d(__webpack_exports__, "ASN1UndefinedError", function() { return ASN1UndefinedError; });\n/* concated harmony reexport ASN1CharactersError */__webpack_require__.d(__webpack_exports__, "ASN1CharactersError", function() { return ASN1CharactersError; });\n/* concated harmony reexport ASN1ConstructionError */__webpack_require__.d(__webpack_exports__, "ASN1ConstructionError", function() { return ASN1ConstructionError; });\n/* concated harmony reexport ObjectIdentifier */__webpack_require__.d(__webpack_exports__, "ObjectIdentifier", function() { return ObjectIdentifier; });\n/* concated harmony reexport TypeIdentifier */__webpack_require__.d(__webpack_exports__, "TypeIdentifier", function() { return TypeIdentifier; });\n/* concated harmony reexport MAX_UINT_32 */__webpack_require__.d(__webpack_exports__, "MAX_UINT_32", function() { return MAX_UINT_32; });\n/* concated harmony reexport MIN_UINT_32 */__webpack_require__.d(__webpack_exports__, "MIN_UINT_32", function() { return MIN_UINT_32; });\n/* concated harmony reexport MAX_SINT_32 */__webpack_require__.d(__webpack_exports__, "MAX_SINT_32", function() { return MAX_SINT_32; });\n/* concated harmony reexport MIN_SINT_32 */__webpack_require__.d(__webpack_exports__, "MIN_SINT_32", function() { return MIN_SINT_32; });\n/* concated harmony reexport ASN1TagClass */__webpack_require__.d(__webpack_exports__, "ASN1TagClass", function() { return ASN1TagClass; });\n/* concated harmony reexport ASN1Construction */__webpack_require__.d(__webpack_exports__, "ASN1Construction", function() { return ASN1Construction; });\n/* concated harmony reexport LengthEncodingPreference */__webpack_require__.d(__webpack_exports__, "LengthEncodingPreference", function() { return LengthEncodingPreference; });\n/* concated harmony reexport ASN1SpecialRealValue */__webpack_require__.d(__webpack_exports__, "ASN1SpecialRealValue", function() { return ASN1SpecialRealValue; });\n/* concated harmony reexport ASN1RealEncodingBase */__webpack_require__.d(__webpack_exports__, "ASN1RealEncodingBase", function() { return ASN1RealEncodingBase; });\n/* concated harmony reexport ASN1RealEncodingScale */__webpack_require__.d(__webpack_exports__, "ASN1RealEncodingScale", function() { return ASN1RealEncodingScale; });\n/* concated harmony reexport ASN1UniversalType */__webpack_require__.d(__webpack_exports__, "ASN1UniversalType", function() { return ASN1UniversalType; });\n/* concated harmony reexport printableStringCharacters */__webpack_require__.d(__webpack_exports__, "printableStringCharacters", function() { return printableStringCharacters; });\n/* concated harmony reexport utcTimeRegex */__webpack_require__.d(__webpack_exports__, "utcTimeRegex", function() { return utcTimeRegex; });\n/* concated harmony reexport distinguishedUTCTimeRegex */__webpack_require__.d(__webpack_exports__, "distinguishedUTCTimeRegex", function() { return distinguishedUTCTimeRegex; });\n/* concated harmony reexport generalizedTimeRegex */__webpack_require__.d(__webpack_exports__, "generalizedTimeRegex", function() { return generalizedTimeRegex; });\n/* concated harmony reexport distinguishedGeneralizedTimeRegex */__webpack_require__.d(__webpack_exports__, "distinguishedGeneralizedTimeRegex", function() { return distinguishedGeneralizedTimeRegex; });\n/* concated harmony reexport nr1Regex */__webpack_require__.d(__webpack_exports__, "nr1Regex", function() { return nr1Regex; });\n/* concated harmony reexport nr2Regex */__webpack_require__.d(__webpack_exports__, "nr2Regex", function() { return nr2Regex; });\n/* concated harmony reexport nr3Regex */__webpack_require__.d(__webpack_exports__, "nr3Regex", function() { return nr3Regex; });\n/* concated harmony reexport canonicalNR3Regex */__webpack_require__.d(__webpack_exports__, "canonicalNR3Regex", function() { return canonicalNR3Regex; });\n/* concated harmony reexport distinguishedNR3Regex */__webpack_require__.d(__webpack_exports__, "distinguishedNR3Regex", function() { return distinguishedNR3Regex; });\n/* concated harmony reexport CANONICAL_TAG_CLASS_ORDERING */__webpack_require__.d(__webpack_exports__, "CANONICAL_TAG_CLASS_ORDERING", function() { return CANONICAL_TAG_CLASS_ORDERING; });\n\n\n\n\n\n\n\n\n\n/***/ })\n/******/ ]);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))\n\n//# sourceURL=webpack://x509/./node_modules/asn1-ts/dist/node/asn1.js?')},"./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack://x509/./node_modules/base64-js/index.js?")},"./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */function(module,exports){eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack://x509/./node_modules/ieee754/index.js?")},"./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack://x509/./node_modules/isarray/index.js?")},"./node_modules/node-libs-browser/node_modules/buffer/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!
  \*********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://x509/./node_modules/node-libs-browser/node_modules/buffer/index.js?")},"./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://x509/./node_modules/process/browser.js?")},"./node_modules/util/node_modules/inherits/inherits_browser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/util/node_modules/inherits/inherits_browser.js ***!
  \*********************************************************************/
/*! no static exports found */function(module,exports){eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack://x509/./node_modules/util/node_modules/inherits/inherits_browser.js?")},"./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack://x509/./node_modules/util/support/isBufferBrowser.js?")},"./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/util/node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://x509/./node_modules/util/util.js?")},"./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://x509/(webpack)/buildin/global.js?')},"./source/AttributeCertificateDefinitions/index.ts":
/*!*********************************************************!*\
  !*** ./source/AttributeCertificateDefinitions/index.ts ***!
  \*********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.attributeCertificateDefinitionsOID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 32]);\n\n\n//# sourceURL=webpack://x509/./source/AttributeCertificateDefinitions/index.ts?')},"./source/AuthenticationFramework/AlgorithmIdentifier.ts":
/*!***************************************************************!*\
  !*** ./source/AuthenticationFramework/AlgorithmIdentifier.ts ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass AlgorithmIdentifier {\n    constructor(algorithm, parameters) {\n        this.algorithm = algorithm;\n        this.parameters = parameters;\n    }\n    static fromElement(value) {\n        const algorithmIdentifierElements = value.sequence;\n        if (algorithmIdentifierElements.length !== 2) {\n            throw new errors.X509Error("Invalid number of elements in AlgorithmIdentifier");\n        }\n        switch (algorithmIdentifierElements[0].validateTag([0], [0], [6])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on AlgorithmIdentifier.algorithm");\n            case -2: throw new errors.X509Error("Invalid construction on AlgorithmIdentifier.algorithm");\n            case -3: throw new errors.X509Error("Invalid tag number on AlgorithmIdentifier.algorithm");\n            default: throw new errors.X509Error("Undefined error when validating AlgorithmIdentifier.algorithm tag");\n        }\n        return new AlgorithmIdentifier(algorithmIdentifierElements[0].objectIdentifier, algorithmIdentifierElements[1]);\n    }\n    toElement() {\n        if (this.algorithm === undefined)\n            throw new errors.X509Error("Algorithm is undefined");\n        const algorithmElement = new asn1_ts_1.DERElement();\n        algorithmElement.tagNumber = 6;\n        algorithmElement.objectIdentifier = this.algorithm;\n        const algorithmIdentifierElement = new asn1_ts_1.DERElement();\n        algorithmIdentifierElement.tagClass = 0;\n        algorithmIdentifierElement.construction = 1;\n        algorithmIdentifierElement.tagNumber = 16;\n        if (this.parameters === undefined) {\n            algorithmIdentifierElement.sequence = [algorithmElement];\n        }\n        else {\n            algorithmIdentifierElement.sequence = [algorithmElement, this.parameters];\n        }\n        return algorithmIdentifierElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return AlgorithmIdentifier.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = AlgorithmIdentifier;\n\n\n//# sourceURL=webpack://x509/./source/AuthenticationFramework/AlgorithmIdentifier.ts?')},"./source/AuthenticationFramework/Certificate.ts":
/*!*******************************************************!*\
  !*** ./source/AuthenticationFramework/Certificate.ts ***!
  \*******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst TBSCertificate_1 = __importDefault(__webpack_require__(/*! ./TBSCertificate */ "./source/AuthenticationFramework/TBSCertificate.ts"));\nconst AlgorithmIdentifier_1 = __importDefault(__webpack_require__(/*! ./AlgorithmIdentifier */ "./source/AuthenticationFramework/AlgorithmIdentifier.ts"));\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass Certificate {\n    constructor(tbsCertificate, signatureAlgorithm, signatureValue) {\n        this.tbsCertificate = tbsCertificate;\n        this.signatureAlgorithm = signatureAlgorithm;\n        this.signatureValue = signatureValue;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on Certificate");\n            case -2: throw new errors.X509Error("Invalid construction on Certificate");\n            case -3: throw new errors.X509Error("Invalid tag number on Certificate");\n            default: throw new errors.X509Error("Undefined error when validating Certificate tag");\n        }\n        const certificateElements = value.sequence;\n        if (certificateElements.length !== 3)\n            throw new errors.X509Error("Invalid number of elements in Certificate");\n        switch (certificateElements[2].validateTag([0], [0], [3])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on Certificate.signatureValue");\n            case -2: throw new errors.X509Error("Invalid construction on Certificate.signatureValue");\n            case -3: throw new errors.X509Error("Invalid tag number on Certificate.signatureValue");\n            default: throw new errors.X509Error("Undefined error when validating Certificate.signatureValue tag");\n        }\n        return new Certificate(TBSCertificate_1.default.fromElement(certificateElements[0]), AlgorithmIdentifier_1.default.fromElement(certificateElements[1]), certificateElements[2].bitString);\n    }\n    toElement() {\n        const signatureValueElement = new asn1_ts_1.DERElement(0, 0, 3);\n        signatureValueElement.bitString = this.signatureValue;\n        const ret = new asn1_ts_1.DERElement(0, 1, 16);\n        ret.sequence = [\n            this.tbsCertificate.toElement(),\n            this.signatureAlgorithm.toElement(),\n            signatureValueElement,\n        ];\n        return ret;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return this.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = Certificate;\nCertificate.maximumX509CertificateSizeInBytes = 100000;\n\n\n//# sourceURL=webpack://x509/./source/AuthenticationFramework/Certificate.ts?')},"./source/AuthenticationFramework/Extension.ts":
/*!*****************************************************!*\
  !*** ./source/AuthenticationFramework/Extension.ts ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass Extension {\n    constructor(extnID, critical, extnValue) {\n        this.extnID = extnID;\n        this.critical = critical;\n        this.extnValue = extnValue;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on Extension");\n            case -2: throw new errors.X509Error("Invalid construction on Extension");\n            case -3: throw new errors.X509Error("Invalid tag number on Extension");\n            default: throw new errors.X509Error("Undefined error when validating Extension tag");\n        }\n        const extensionElements = value.sequence;\n        if (extensionElements.length > 3) {\n            throw new errors.X509Error("An Extension encoded more than three elements");\n        }\n        else if (extensionElements.length < 2) {\n            throw new errors.X509Error("An Extension encoded fewer than two elements");\n        }\n        switch (extensionElements[0].validateTag([0], [0], [6])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on Extension.identifier");\n            case -2: throw new errors.X509Error("Invalid construction on Extension.identifier");\n            case -3: throw new errors.X509Error("Invalid tag number on Extension.identifier");\n            default: throw new errors.X509Error("Undefined error when validating Extension.identifier tag");\n        }\n        let critical = false;\n        if (extensionElements.length === 3) {\n            switch (extensionElements[1].validateTag([0], [0], [1])) {\n                case 0: break;\n                case -1: throw new errors.X509Error("Invalid tag class on Extension.critical");\n                case -2: throw new errors.X509Error("Invalid construction on Extension.critical");\n                case -3: throw new errors.X509Error("Invalid tag number on Extension.critical");\n                default: throw new errors.X509Error("Undefined error when validating Extension.critical tag");\n            }\n            critical = extensionElements[1].boolean;\n        }\n        switch (extensionElements[extensionElements.length - 1].validateTag([0], [0, 1], [4])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on Extension.extnValue");\n            case -2: throw new errors.X509Error("Invalid construction on Extension.extnValue");\n            case -3: throw new errors.X509Error("Invalid tag number on Extension.extnValue");\n            default: throw new errors.X509Error("Undefined error when validating Extension.extnValue tag");\n        }\n        const extnID = extensionElements[0].objectIdentifier;\n        const extnValue = extensionElements[extensionElements.length - 1].octetString;\n        return new Extension(extnID, critical, extnValue);\n    }\n    toElement() {\n        if (this.extnID === undefined)\n            throw new errors.X509Error("extnID is undefined");\n        const extnIDElement = new asn1_ts_1.DERElement();\n        extnIDElement.tagClass = 0;\n        extnIDElement.construction = 0;\n        extnIDElement.tagNumber = 6;\n        const criticalElement = new asn1_ts_1.DERElement();\n        criticalElement.tagClass = 0;\n        criticalElement.construction = 0;\n        criticalElement.tagNumber = 1;\n        const extnValueElement = new asn1_ts_1.DERElement();\n        extnValueElement.tagClass = 0;\n        extnValueElement.construction = 0;\n        extnValueElement.tagNumber = 4;\n        const ret = new asn1_ts_1.DERElement();\n        ret.tagClass = 0;\n        ret.construction = 1;\n        ret.tagNumber = 16;\n        ret.sequence = [extnIDElement, criticalElement, extnValueElement];\n        return ret;\n    }\n    fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        Extension.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = Extension;\n\n\n//# sourceURL=webpack://x509/./source/AuthenticationFramework/Extension.ts?')},"./source/AuthenticationFramework/SubjectPublicKeyInfo.ts":
/*!****************************************************************!*\
  !*** ./source/AuthenticationFramework/SubjectPublicKeyInfo.ts ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nconst AlgorithmIdentifier_1 = __importDefault(__webpack_require__(/*! ./AlgorithmIdentifier */ "./source/AuthenticationFramework/AlgorithmIdentifier.ts"));\nclass SubjectPublicKeyInfo {\n    constructor(algorithm, subjectPublicKey) {\n        this.algorithm = algorithm;\n        this.subjectPublicKey = subjectPublicKey;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on SubjectPublicKeyInfo");\n            case -2: throw new errors.X509Error("Invalid construction on SubjectPublicKeyInfo");\n            case -3: throw new errors.X509Error("Invalid tag number on SubjectPublicKeyInfo");\n            default: throw new errors.X509Error("Undefined error when validating SubjectPublicKeyInfo tag");\n        }\n        const subjectPublicKeyElements = value.sequence;\n        switch (subjectPublicKeyElements[1].validateTag([0], [0], [3])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on SubjectPublicKeyInfo.subjectPublicKey");\n            case -2: throw new errors.X509Error("Invalid construction on SubjectPublicKeyInfo.subjectPublicKey");\n            case -3: throw new errors.X509Error("Invalid tag number on SubjectPublicKeyInfo.subjectPublicKey");\n            default: {\n                throw new errors.X509Error("Undefined error when validating SubjectPublicKeyInfo.subjectPublicKey tag");\n            }\n        }\n        return new SubjectPublicKeyInfo(AlgorithmIdentifier_1.default.fromElement(subjectPublicKeyElements[0]), subjectPublicKeyElements[1].bitString);\n    }\n    toElement() {\n        if (this.algorithm === undefined)\n            throw new errors.X509Error("Algorithm is undefined");\n        const ret = new asn1_ts_1.DERElement();\n        ret.tagClass = 0;\n        ret.construction = 1;\n        ret.tagNumber = 16;\n        const subjectPublicKeyElement = new asn1_ts_1.DERElement();\n        subjectPublicKeyElement.tagClass = 0;\n        subjectPublicKeyElement.construction = 0;\n        subjectPublicKeyElement.tagNumber = 3;\n        subjectPublicKeyElement.bitString = this.subjectPublicKey;\n        ret.sequence = [this.algorithm.toElement(), subjectPublicKeyElement];\n        return ret;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return SubjectPublicKeyInfo.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = SubjectPublicKeyInfo;\n\n\n//# sourceURL=webpack://x509/./source/AuthenticationFramework/SubjectPublicKeyInfo.ts?')},"./source/AuthenticationFramework/TBSCertificate.ts":
/*!**********************************************************!*\
  !*** ./source/AuthenticationFramework/TBSCertificate.ts ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nconst Validity_1 = __importDefault(__webpack_require__(/*! ./Validity */ "./source/AuthenticationFramework/Validity.ts"));\nconst SubjectPublicKeyInfo_1 = __importDefault(__webpack_require__(/*! ./SubjectPublicKeyInfo */ "./source/AuthenticationFramework/SubjectPublicKeyInfo.ts"));\nconst AlgorithmIdentifier_1 = __importDefault(__webpack_require__(/*! ./AlgorithmIdentifier */ "./source/AuthenticationFramework/AlgorithmIdentifier.ts"));\nconst Extension_1 = __importDefault(__webpack_require__(/*! ./Extension */ "./source/AuthenticationFramework/Extension.ts"));\nconst InformationFramework_1 = __webpack_require__(/*! ../InformationFramework */ "./source/InformationFramework/index.ts");\nclass TBSCertificate {\n    constructor(ver = 0, serialNumber, signature, issuer, validity, subject, subjectPublicKeyInfo, issuerUniqueID, subjectUniqueID, extensions) {\n        this.ver = ver;\n        this.serialNumber = serialNumber;\n        this.signature = signature;\n        this.issuer = issuer;\n        this.validity = validity;\n        this.subject = subject;\n        this.subjectPublicKeyInfo = subjectPublicKeyInfo;\n        this.issuerUniqueID = issuerUniqueID;\n        this.subjectUniqueID = subjectUniqueID;\n        this.extensions = extensions;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on TBSCertificate");\n            case -2: throw new errors.X509Error("Invalid construction on TBSCertificate");\n            case -3: throw new errors.X509Error("Invalid tag number on TBSCertificate");\n            default: throw new errors.X509Error("Undefined error when validating TBSCertificate tag");\n        }\n        const tbsCertificateElements = value.sequence;\n        if (tbsCertificateElements.length < 6) {\n            throw new errors.X509Error(`TBSCertificate was too short. It contained ${tbsCertificateElements.length} elements.`);\n        }\n        let ver = 0;\n        let serialNumber;\n        let issuerUniqueID = undefined;\n        let subjectUniqueID = undefined;\n        let extensions = undefined;\n        let encounteredElements = 0;\n        {\n            if (tbsCertificateElements[encounteredElements].tagClass === 2\n                && tbsCertificateElements[encounteredElements].construction === 1\n                && tbsCertificateElements[encounteredElements].tagNumber === 0) {\n                const versionElements = tbsCertificateElements[encounteredElements].sequence;\n                if (versionElements.length !== 1)\n                    throw new errors.X509Error("version can only contain one element.");\n                switch (versionElements[0].validateTag([0], [0], [2])) {\n                    case 0: break;\n                    case -1: throw new errors.X509Error("Invalid tag class on TBSCertificate.version inner element");\n                    case -2: throw new errors.X509Error("Invalid construction on TBSCertificate.version inner element");\n                    case -3: throw new errors.X509Error("Invalid tag number on TBSCertificate.version inner element");\n                    default: {\n                        throw new errors.X509Error("Undefined error when validating TBSCertificate.version inner element tag");\n                    }\n                }\n                switch (versionElements[0].integer) {\n                    case 0:\n                        ver = 0;\n                        break;\n                    case 1:\n                        ver = 1;\n                        break;\n                    case 2:\n                        ver = 2;\n                        break;\n                    default:\n                        throw new errors.X509Error("Invalid X.509 Certificate version.");\n                }\n                encounteredElements++;\n            }\n        }\n        {\n            switch (tbsCertificateElements[encounteredElements].validateTag([0], [0], [2])) {\n                case 0: break;\n                case -1: throw new errors.X509Error("Invalid tag class on TBSCertificate.serialNumber");\n                case -2: throw new errors.X509Error("Invalid construction on TBSCertificate.serialNumber");\n                case -3: throw new errors.X509Error("Invalid tag number on TBSCertificate.serialNumber");\n                default: throw new errors.X509Error("Undefined error when validating TBSCertificate.serialNumber tag");\n            }\n            serialNumber = tbsCertificateElements[encounteredElements++].octetString;\n        }\n        const signature = AlgorithmIdentifier_1.default.fromElement(tbsCertificateElements[encounteredElements++]);\n        const issuer = InformationFramework_1.RDNSequence.fromElement(tbsCertificateElements[encounteredElements++]);\n        const validity = Validity_1.default.fromElement(tbsCertificateElements[encounteredElements++]);\n        const subject = InformationFramework_1.RDNSequence.fromElement(tbsCertificateElements[encounteredElements++]);\n        const subjectPublicKeyInfo = SubjectPublicKeyInfo_1.default.fromElement(tbsCertificateElements[encounteredElements++]);\n        if (encounteredElements < tbsCertificateElements.length\n            && tbsCertificateElements[encounteredElements].tagClass === 2\n            && tbsCertificateElements[encounteredElements].construction === 0\n            && tbsCertificateElements[encounteredElements].tagNumber === 1) {\n            if (ver === 0) {\n                throw new errors.X509Error("issuerUniqueIdentifier not allowed in Version 1 X.509 certificate.");\n            }\n            issuerUniqueID = tbsCertificateElements[encounteredElements].bitString;\n            encounteredElements++;\n        }\n        let endOfTBSCertficateExtensionsIndex = encounteredElements;\n        while (endOfTBSCertficateExtensionsIndex < tbsCertificateElements.length\n            && !(tbsCertificateElements[encounteredElements].tagClass === 2\n                && (tbsCertificateElements[encounteredElements].tagNumber === 2\n                    || tbsCertificateElements[encounteredElements].tagNumber === 3)))\n            endOfTBSCertficateExtensionsIndex++;\n        asn1_ts_1.DERElement.isInCanonicalOrder(tbsCertificateElements.slice(encounteredElements, endOfTBSCertficateExtensionsIndex));\n        asn1_ts_1.DERElement.isUniquelyTagged(tbsCertificateElements.slice(encounteredElements, endOfTBSCertficateExtensionsIndex));\n        while (encounteredElements < tbsCertificateElements.length) {\n            if (tbsCertificateElements[encounteredElements].tagClass === 2) {\n                switch (tbsCertificateElements[encounteredElements].tagNumber) {\n                    case (2): {\n                        if (ver === 0) {\n                            throw new errors.X509Error("subjectUniqueIdentifier not allowed in Version 1 X.509 certificate.");\n                        }\n                        if ((tbsCertificateElements.length - encounteredElements) > 2) {\n                            throw new errors.X509Error("subjectUniqueIdentifier must be last or second to last in the TBSCertificate.");\n                        }\n                        subjectUniqueID = tbsCertificateElements[encounteredElements].bitString;\n                        break;\n                    }\n                    case (3): {\n                        if (ver !== 2) {\n                            throw new errors.X509Error("extensions not allowed in Version 1 or 2 X.509 certificate.");\n                        }\n                        if ((tbsCertificateElements.length - encounteredElements) !== 1) {\n                            throw new errors.X509Error("extensions must be the last element in the TBSCertificate.");\n                        }\n                        switch (tbsCertificateElements[encounteredElements].validateTag([2], [1], [3])) {\n                            case 0: break;\n                            case -1: {\n                                throw new errors.X509Error("Invalid tag class on a TBSCertificate.extensions outer element");\n                            }\n                            case -2: {\n                                throw new errors.X509Error("Invalid construction on a TBSCertificate.extensions outer element");\n                            }\n                            case -3: {\n                                throw new errors.X509Error("Invalid tag number on a TBSCertificate.extensions outer element");\n                            }\n                            default: {\n                                throw new errors.X509Error("Undefined error when validating a TBSCertificate.extensions outer element tag");\n                            }\n                        }\n                        const extensionsElement = new asn1_ts_1.DERElement();\n                        extensionsElement.fromBytes(tbsCertificateElements[encounteredElements].value);\n                        const extensionElements = extensionsElement.sequence;\n                        if (extensionElements.length === 0) {\n                            throw new errors.X509Error("extensions element may not be present in X.509 "\n                                + "TBSCertificate if there are no extensions in it.");\n                        }\n                        if (typeof extensions === "undefined")\n                            extensions = [];\n                        extensions = extensions.concat(extensionElements.map(Extension_1.default.fromElement));\n                        break;\n                    }\n                    default: break;\n                }\n            }\n            encounteredElements++;\n        }\n        return new TBSCertificate(ver, serialNumber, signature, issuer, validity, subject, subjectPublicKeyInfo, issuerUniqueID, subjectUniqueID, extensions);\n    }\n    toElement() {\n        const retSequence = [];\n        {\n            const versionInnerElement = new asn1_ts_1.DERElement(0, 0, 2);\n            versionInnerElement.integer = this.ver;\n            const versionOuterElement = new asn1_ts_1.DERElement(2, 1, 0);\n            versionOuterElement.sequence = [versionInnerElement];\n            retSequence.push(versionOuterElement);\n        }\n        {\n            const serialNumberElement = new asn1_ts_1.DERElement(0, 0, 2);\n            serialNumberElement.octetString = this.serialNumber;\n            retSequence.push(serialNumberElement);\n        }\n        {\n            retSequence.push(this.signature.toElement());\n        }\n        {\n            const issuerElement = new asn1_ts_1.DERElement(0, 1, 16);\n            issuerElement.sequence = this.issuer.value.map((rdn) => {\n                const rdnElement = new asn1_ts_1.DERElement(0, 1, 17);\n                rdnElement.sequence = rdn.value.map((rdnValue) => rdnValue.toElement());\n                return rdnElement;\n            });\n            retSequence.push(issuerElement);\n        }\n        {\n            retSequence.push(this.validity.toElement());\n        }\n        {\n            const subjectElement = new asn1_ts_1.DERElement(0, 1, 16);\n            subjectElement.sequence = this.subject.value.map((rdn) => {\n                const rdnElement = new asn1_ts_1.DERElement(0, 1, 17);\n                rdnElement.sequence = rdn.value.map((rdnValue) => rdnValue.toElement());\n                return rdnElement;\n            });\n            retSequence.push(subjectElement);\n        }\n        {\n            retSequence.push(this.subjectPublicKeyInfo.toElement());\n        }\n        if (this.ver !== 0) {\n            if (this.issuerUniqueID) {\n                const issuerUniqueIdentifierElement = new asn1_ts_1.DERElement(2, 0, 1);\n                issuerUniqueIdentifierElement.bitString = this.issuerUniqueID;\n                retSequence.push(issuerUniqueIdentifierElement);\n            }\n            if (this.subjectUniqueID) {\n                const subjectUniqueIdentifierElement = new asn1_ts_1.DERElement(2, 0, 2);\n                subjectUniqueIdentifierElement.bitString = this.subjectUniqueID;\n                retSequence.push(subjectUniqueIdentifierElement);\n            }\n        }\n        if (this.ver === 2) {\n            if (this.extensions) {\n                const extensionElements = [];\n                this.extensions.forEach((extension) => {\n                    extensionElements.push(extension.toElement());\n                });\n                const extensionsElement = new asn1_ts_1.DERElement(0, 1, 16);\n                extensionsElement.sequence = extensionElements;\n                const extensionsOuterElement = new asn1_ts_1.DERElement(2, 1, 3);\n                extensionsOuterElement.sequence = [extensionsElement];\n                retSequence.push(extensionsOuterElement);\n            }\n        }\n        const ret = new asn1_ts_1.DERElement(0, 1, 16);\n        ret.sequence = retSequence;\n        return ret;\n    }\n    fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return TBSCertificate.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = TBSCertificate;\n\n\n//# sourceURL=webpack://x509/./source/AuthenticationFramework/TBSCertificate.ts?')},"./source/AuthenticationFramework/Validity.ts":
/*!****************************************************!*\
  !*** ./source/AuthenticationFramework/Validity.ts ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass Validity {\n    constructor(notBefore, notAfter) {\n        this.notBefore = notBefore;\n        this.notAfter = notAfter;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on validity");\n            case -2: throw new errors.X509Error("Invalid construction on validity");\n            case -3: throw new errors.X509Error("Invalid tag number on validity");\n            default: throw new errors.X509Error("Undefined error when validating validity tag");\n        }\n        const validityElements = value.sequence;\n        if (validityElements.length !== 2) {\n            throw new errors.X509Error("validity contained more than two ASN.1 elements");\n        }\n        switch (validityElements[0].validateTag([0], [0], [23, 24])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on validity.notBefore");\n            case -2: throw new errors.X509Error("Invalid construction on validity.notBefore");\n            case -3: throw new errors.X509Error("Invalid tag number on validity.notBefore");\n            default: throw new errors.X509Error("Undefined error when validating validity.notBefore tag");\n        }\n        switch (validityElements[1].validateTag([0], [0], [23, 24])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on validity.notBefore");\n            case -2: throw new errors.X509Error("Invalid construction on validity.notBefore");\n            case -3: throw new errors.X509Error("Invalid tag number on validity.notBefore");\n            default: throw new errors.X509Error("Undefined error when validating validity.notBefore tag");\n        }\n        return new Validity((validityElements[0].tagNumber === 24)\n            ? validityElements[0].generalizedTime : validityElements[0].utcTime, (validityElements[1].tagNumber === 24)\n            ? validityElements[1].generalizedTime : validityElements[1].utcTime);\n    }\n    toElement() {\n        const notBeforeElement = new asn1_ts_1.DERElement();\n        notBeforeElement.tagNumber = 24;\n        notBeforeElement.generalizedTime = this.notBefore;\n        const notAfterElement = new asn1_ts_1.DERElement();\n        notAfterElement.tagNumber = 24;\n        notAfterElement.generalizedTime = this.notBefore;\n        const validityElement = new asn1_ts_1.DERElement();\n        validityElement.tagClass = 0;\n        validityElement.construction = 1;\n        validityElement.tagNumber = 16;\n        validityElement.sequence = [notBeforeElement, notAfterElement];\n        return validityElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return Validity.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = Validity;\n\n\n//# sourceURL=webpack://x509/./source/AuthenticationFramework/Validity.ts?')},"./source/AuthenticationFramework/index.ts":
/*!*************************************************!*\
  !*** ./source/AuthenticationFramework/index.ts ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.authenticationFrameworkOID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 7]);\nvar AlgorithmIdentifier_1 = __webpack_require__(/*! ./AlgorithmIdentifier */ "./source/AuthenticationFramework/AlgorithmIdentifier.ts");\nexports.AlgorithmIdentifier = AlgorithmIdentifier_1.default;\nvar Certificate_1 = __webpack_require__(/*! ./Certificate */ "./source/AuthenticationFramework/Certificate.ts");\nexports.Certificate = Certificate_1.default;\nvar Extension_1 = __webpack_require__(/*! ./Extension */ "./source/AuthenticationFramework/Extension.ts");\nexports.Extension = Extension_1.default;\nvar SubjectPublicKeyInfo_1 = __webpack_require__(/*! ./SubjectPublicKeyInfo */ "./source/AuthenticationFramework/SubjectPublicKeyInfo.ts");\nexports.SubjectPublicKeyInfo = SubjectPublicKeyInfo_1.default;\nvar TBSCertificate_1 = __webpack_require__(/*! ./TBSCertificate */ "./source/AuthenticationFramework/TBSCertificate.ts");\nexports.TBSCertificate = TBSCertificate_1.default;\nvar Validity_1 = __webpack_require__(/*! ./Validity */ "./source/AuthenticationFramework/Validity.ts");\nexports.Validity = Validity_1.default;\n\n\n//# sourceURL=webpack://x509/./source/AuthenticationFramework/index.ts?')},"./source/CertificateExtensions/AuthorityKeyIdentifier.ts":
/*!****************************************************************!*\
  !*** ./source/CertificateExtensions/AuthorityKeyIdentifier.ts ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass AuthorityKeyIdentifier {\n    constructor(keyIdentifier, authorityCertIssuer, authorityCertSerialNumber) {\n        this.keyIdentifier = keyIdentifier;\n        this.authorityCertIssuer = authorityCertIssuer;\n        this.authorityCertSerialNumber = authorityCertSerialNumber;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on AuthorityKeyIdentifier");\n            case -2: throw new errors.X509Error("Invalid construction on AuthorityKeyIdentifier");\n            case -3: throw new errors.X509Error("Invalid tag number on AuthorityKeyIdentifier");\n            default: throw new errors.X509Error("Undefined error when validating AuthorityKeyIdentifier tag");\n        }\n        const authorityKeyIdentifierElements = value.sequence;\n        if (authorityKeyIdentifierElements.length !== 1\n            && authorityKeyIdentifierElements.length !== 3)\n            throw new errors.X509Error("Invalid number of elements in AuthorityKeyIdentifier");\n        switch (authorityKeyIdentifierElements[0].validateTag([2], [0], [0])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on AuthorityKeyIdentifier.keyIdentifier");\n            case -2: throw new errors.X509Error("Invalid construction on AuthorityKeyIdentifier.keyIdentifier");\n            case -3: throw new errors.X509Error("Invalid tag number on AuthorityKeyIdentifier.keyIdentifier");\n            default: throw new errors.X509Error("Undefined error when validating AuthorityKeyIdentifier.keyIdentifier tag");\n        }\n        const keyIdentifier = authorityKeyIdentifierElements[0].octetString;\n        let authorityCertIssuer;\n        let authorityCertSerialNumber;\n        if (authorityKeyIdentifierElements.length === 3) {\n            switch (authorityKeyIdentifierElements[1].validateTag([2], [1], [1])) {\n                case 0: break;\n                case -1: throw new errors.X509Error("Invalid tag class on AuthorityKeyIdentifier.authorityCertIssuer");\n                case -2: throw new errors.X509Error("Invalid construction on AuthorityKeyIdentifier.authorityCertIssuer");\n                case -3: throw new errors.X509Error("Invalid tag number on AuthorityKeyIdentifier.authorityCertIssuer");\n                default: {\n                    throw new errors.X509Error("Undefined error when validating AuthorityKeyIdentifier.authorityCertIssuer tag");\n                }\n            }\n            switch (authorityKeyIdentifierElements[2].validateTag([2], [0], [2])) {\n                case 0: break;\n                case -1: {\n                    throw new errors.X509Error("Invalid tag class on AuthorityKeyIdentifier.authorityCertSerialNumber");\n                }\n                case -2: {\n                    throw new errors.X509Error("Invalid construction on AuthorityKeyIdentifier.authorityCertSerialNumber");\n                }\n                case -3: {\n                    throw new errors.X509Error("Invalid tag number on AuthorityKeyIdentifier.authorityCertSerialNumber");\n                }\n                default: {\n                    throw new errors.X509Error("Undefined error when validating AuthorityKeyIdentifier.authorityCertSerialNumber tag");\n                }\n            }\n            authorityCertIssuer = authorityKeyIdentifierElements[1].sequence;\n            authorityCertSerialNumber = authorityKeyIdentifierElements[2].octetString;\n        }\n        return new AuthorityKeyIdentifier(keyIdentifier, authorityCertIssuer, authorityCertSerialNumber);\n    }\n    toElement() {\n        const authorityKeyIdentifierElements = [];\n        const keyIdentifierElement = new asn1_ts_1.DERElement(2, 0, 0);\n        authorityKeyIdentifierElements.push(keyIdentifierElement);\n        if ((this.authorityCertIssuer && !this.authorityCertSerialNumber)\n            || (!this.authorityCertIssuer && this.authorityCertSerialNumber)) {\n            throw new errors.X509Error("AuthorityKeyIdentifer must have both authorityCertIssuer and "\n                + "authorityCertSerialNumber PRESENT or ABSENT.");\n        }\n        else if (this.authorityCertIssuer && this.authorityCertSerialNumber) {\n            const authorityCertIssuer = new asn1_ts_1.DERElement(2, 1, 1);\n            const authorityCertSerialNumber = new asn1_ts_1.DERElement(2, 0, 2);\n            authorityKeyIdentifierElements.push(authorityCertIssuer);\n            authorityKeyIdentifierElements.push(authorityCertSerialNumber);\n        }\n        const authorityKeyIdentifierElement = new asn1_ts_1.DERElement(0, 1, 16);\n        authorityKeyIdentifierElement.sequence = authorityKeyIdentifierElements;\n        return authorityKeyIdentifierElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return AuthorityKeyIdentifier.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = AuthorityKeyIdentifier;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/AuthorityKeyIdentifier.ts?')},"./source/CertificateExtensions/BasicConstraintsSyntax.ts":
/*!****************************************************************!*\
  !*** ./source/CertificateExtensions/BasicConstraintsSyntax.ts ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass BasicConstraintsSyntax {\n    constructor(ca, pathLenConstraint) {\n        this.ca = ca;\n        this.pathLenConstraint = pathLenConstraint;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on BasicConstraintsSyntax");\n            case -2: throw new errors.X509Error("Invalid construction on BasicConstraintsSyntax");\n            case -3: throw new errors.X509Error("Invalid tag number on BasicConstraintsSyntax");\n            default: throw new errors.X509Error("Undefined error when validating BasicConstraintsSyntax tag");\n        }\n        let ca;\n        let pathLenConstraint;\n        let fixedPositionElementsEncountered = 0;\n        const basicConstraintsSyntaxElements = value.sequence;\n        if (!asn1_ts_1.DERElement.isUniquelyTagged(basicConstraintsSyntaxElements)) {\n            throw new errors.X509Error("Elements of BasicConstraintsSyntax were not uniquely tagged");\n        }\n        basicConstraintsSyntaxElements.forEach((element, index) => {\n            if (element.tagClass === 0) {\n                if (element.tagNumber === 1) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("BasicConstraintsSyntax.ca was not primitively constructed");\n                    }\n                    if (index !== 0) {\n                        throw new errors.X509Error("BasicConstraintsSyntax.ca was not the first element");\n                    }\n                    ca = element.boolean;\n                    fixedPositionElementsEncountered++;\n                }\n                else if (element.tagNumber === 2) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("BasicConstraintsSyntax.pathLenConstraint was not primitively constructed");\n                    }\n                    if (index > 1) {\n                        throw new errors.X509Error("BasicConstraintsSyntax.pathLenConstraint was not the first or second element");\n                    }\n                    if (index === 1\n                        && (basicConstraintsSyntaxElements[0].tagClass !== 0\n                            || basicConstraintsSyntaxElements[0].construction !== 0\n                            || basicConstraintsSyntaxElements[0].tagNumber !== 1)) {\n                        throw new errors.X509Error("BasicConstraintsSyntax missing ca element before "\n                            + "pathLenConstraint when pathLenConstraint was "\n                            + "the second element.");\n                    }\n                    pathLenConstraint = element.integer;\n                    fixedPositionElementsEncountered++;\n                }\n            }\n        });\n        if (!asn1_ts_1.DERElement.isInCanonicalOrder(basicConstraintsSyntaxElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Extended elements of BasicConstraintsSyntax were not in canonical order");\n        }\n        if (ca === false) {\n            throw new errors.X509Error("BasicConstraintsSyntax.cA was encoded with the default "\n                + "value, which is prohibited by the Distinguished Encoding "\n                + "Rules.");\n        }\n        if (ca === undefined)\n            ca = false;\n        return new BasicConstraintsSyntax(ca, pathLenConstraint);\n    }\n    toElement() {\n        const basicConstraintsSyntaxElements = [];\n        if (this.ca === true) {\n            const caElement = new asn1_ts_1.DERElement(0, 0, 1);\n            caElement.boolean = true;\n            basicConstraintsSyntaxElements.push(caElement);\n        }\n        if (this.pathLenConstraint) {\n            const pathLenConstraintElement = new asn1_ts_1.DERElement(0, 0, 2);\n            pathLenConstraintElement.integer = this.pathLenConstraint;\n            basicConstraintsSyntaxElements.push(pathLenConstraintElement);\n        }\n        const basicConstraintsSyntaxElement = new asn1_ts_1.DERElement(0, 1, 16);\n        basicConstraintsSyntaxElement.sequence = basicConstraintsSyntaxElements;\n        return basicConstraintsSyntaxElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return BasicConstraintsSyntax.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = BasicConstraintsSyntax;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/BasicConstraintsSyntax.ts?')},"./source/CertificateExtensions/DistributionPoint.ts":
/*!***********************************************************!*\
  !*** ./source/CertificateExtensions/DistributionPoint.ts ***!
  \***********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nconst ReasonFlags_1 = __importDefault(__webpack_require__(/*! ./ReasonFlags */ "./source/CertificateExtensions/ReasonFlags.ts"));\nclass DistributionPoint {\n    constructor(distributionPoint, reasons, cRLIssuer) {\n        this.distributionPoint = distributionPoint;\n        this.reasons = reasons;\n        this.cRLIssuer = cRLIssuer;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on DistributionPoint");\n            case -2: throw new errors.X509Error("Invalid construction on DistributionPoint");\n            case -3: throw new errors.X509Error("Invalid tag number on DistributionPoint");\n            default: throw new errors.X509Error("Undefined error when validating DistributionPoint tag");\n        }\n        const distributionPointElements = value.sequence;\n        let distributionPoint;\n        let reasons;\n        let cRLIssuer;\n        distributionPointElements.forEach((element) => {\n            switch (element.tagNumber) {\n                case (0): {\n                    distributionPoint = element;\n                    break;\n                }\n                case (1): {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("DistributionPoint.reasons may not be constructed.");\n                    }\n                    reasons = ReasonFlags_1.default.fromElement(element);\n                    break;\n                }\n                case (2): {\n                    cRLIssuer = element.sequence;\n                    break;\n                }\n                default: break;\n            }\n        });\n        return new DistributionPoint(distributionPoint, reasons, cRLIssuer);\n    }\n    toElement() {\n        const distributionPointElements = [];\n        if (this.distributionPoint) {\n            distributionPointElements.push(this.distributionPoint);\n        }\n        if (this.reasons) {\n            distributionPointElements.push(this.reasons.toElement());\n        }\n        if (this.cRLIssuer) {\n            const crlIssuerElement = new asn1_ts_1.DERElement(2, 1, 2);\n            crlIssuerElement.sequence = this.cRLIssuer;\n            distributionPointElements.push(crlIssuerElement);\n        }\n        const ret = new asn1_ts_1.DERElement(0, 1, 16);\n        ret.sequence = distributionPointElements;\n        return ret;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return DistributionPoint.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = DistributionPoint;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/DistributionPoint.ts?')},"./source/CertificateExtensions/EDIPartyName.ts":
/*!******************************************************!*\
  !*** ./source/CertificateExtensions/EDIPartyName.ts ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst UnboundedDirectoryString_1 = __importDefault(__webpack_require__(/*! ../SelectedAttributeTypes/Version8/UnboundedDirectoryString */ "./source/SelectedAttributeTypes/Version8/UnboundedDirectoryString.ts"));\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass EDIPartyName {\n    constructor(nameAssigner, partyName) {\n        this.nameAssigner = nameAssigner;\n        this.partyName = partyName;\n    }\n    toString() {\n        return this.partyName.toString();\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on EDIPartyName");\n            case -2: throw new errors.X509Error("Invalid construction on EDIPartyName");\n            case -3: throw new errors.X509Error("Invalid tag number on EDIPartyName");\n            default: throw new errors.X509Error("Undefined error when validating EDIPartyName tag");\n        }\n        const ediPartNameElements = value.sequence;\n        if (!asn1_ts_1.DERElement.isUniquelyTagged(ediPartNameElements)) {\n            throw new errors.X509Error("Elements of EDIPartyName were not uniquely tagged");\n        }\n        let nameAssigner;\n        let partyName;\n        let fixedPositionElementsEncountered = 0;\n        ediPartNameElements.forEach((element, index) => {\n            if (element.tagClass === 2) {\n                if (element.tagNumber === 0) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("EDIPartyName.nameAssigner was not primitively constructed");\n                    }\n                    if (index !== 0)\n                        throw new errors.X509Error("nameAssigner out of order in EDIPartyName");\n                    nameAssigner = UnboundedDirectoryString_1.default.fromElement(element);\n                    fixedPositionElementsEncountered++;\n                }\n                else if (element.tagNumber === 1) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("EDIPartyName.partyName was not primitively constructed");\n                    }\n                    if (index > 1) {\n                        throw new errors.X509Error("partyName out of order in EDIPartyName");\n                    }\n                    if (index === 1\n                        && (ediPartNameElements[0].tagClass !== 2\n                            || ediPartNameElements[0].construction !== 0\n                            || ediPartNameElements[0].tagNumber !== 1)) {\n                        throw new errors.X509Error("EDIPartyName missing nameAssigner element before "\n                            + "partyName when partyName was the second "\n                            + "element.");\n                    }\n                    partyName = UnboundedDirectoryString_1.default.fromElement(element);\n                    fixedPositionElementsEncountered++;\n                }\n            }\n        });\n        if (!partyName)\n            throw new errors.X509Error("EDIPartyName.partyName was not defined");\n        if (!asn1_ts_1.DERElement.isInCanonicalOrder(ediPartNameElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Extended elements of EDIPartyName were not in canonical order");\n        }\n        return new EDIPartyName(nameAssigner, partyName);\n    }\n    toElement() {\n        const ediPartNameElements = [];\n        if (this.nameAssigner) {\n            ediPartNameElements.push(this.nameAssigner.toElement());\n            ediPartNameElements[0].tagNumber = 0;\n        }\n        ediPartNameElements.push(this.partyName.toElement());\n        ediPartNameElements[(ediPartNameElements.length - 1)].tagNumber = 1;\n        const ediPartNameElement = new asn1_ts_1.DERElement(0, 1, 16);\n        ediPartNameElement.sequence = ediPartNameElements;\n        return ediPartNameElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return this.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = EDIPartyName;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/EDIPartyName.ts?')},"./source/CertificateExtensions/GeneralName.ts":
/*!*****************************************************!*\
  !*** ./source/CertificateExtensions/GeneralName.ts ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst EDIPartyName_1 = __importDefault(__webpack_require__(/*! ./EDIPartyName */ "./source/CertificateExtensions/EDIPartyName.ts"));\nconst InformationFramework_1 = __webpack_require__(/*! ../InformationFramework */ "./source/InformationFramework/index.ts");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nfunction printGeneralName(value) {\n    if (value.tagClass !== 2)\n        return "";\n    switch (value.tagNumber) {\n        case (0): {\n            switch (value.validateTag([0], [1], [8])) {\n                case 0: break;\n                case -1: throw new errors.X509Error("Invalid tag class on INSTANCE OF OTHER-NAME");\n                case -2: throw new errors.X509Error("Invalid construction on INSTANCE OF OTHER-NAME");\n                case -3: throw new errors.X509Error("Invalid tag number on INSTANCE OF OTHER-NAME");\n                default: throw new errors.X509Error("Undefined error when validating INSTANCE OF OTHER-NAME tag");\n            }\n            const otherNameElements = value.sequence;\n            if (otherNameElements.length !== 2) {\n                throw new errors.X509Error("Invalid number of elements in INSTANCE OF OTHER-NAME");\n            }\n            switch (otherNameElements[0].validateTag([0], [0], [6])) {\n                case 0: break;\n                case -1: throw new errors.X509Error("Invalid tag class on OTHER-NAME.id");\n                case -2: throw new errors.X509Error("Invalid construction on OTHER-NAME.id");\n                case -3: throw new errors.X509Error("Invalid tag number on OTHER-NAME.id");\n                default: throw new errors.X509Error("Undefined error when validating OTHER-NAME.id tag");\n            }\n            return `otherName:${otherNameElements[0].objectIdentifier}:${otherNameElements[1].value}`;\n        }\n        case (1): {\n            return `rfc822Name:${value.ia5String}`;\n        }\n        case (2): {\n            return `dnsName:${value.ia5String}`;\n        }\n        case (3): {\n            return "";\n        }\n        case (4): {\n            const rdn = InformationFramework_1.RDNSequence.fromElement(value);\n            return rdn.toString();\n        }\n        case (5): {\n            const epn = EDIPartyName_1.default.fromElement(value);\n            return `ediPartyName:${epn.partyName}`;\n        }\n        case (6): {\n            return `uniformResourceIdentifier:${value.ia5String}`;\n        }\n        case (7): {\n            return `iPAddress:${value.octetString}`;\n        }\n        case (8): {\n            return `registeredID:${value.objectIdentifier}`;\n        }\n        default: return "UNKNOWN NAME SYNTAX";\n    }\n}\nexports.printGeneralName = printGeneralName;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/GeneralName.ts?')},"./source/CertificateExtensions/GeneralSubtree.ts":
/*!********************************************************!*\
  !*** ./source/CertificateExtensions/GeneralSubtree.ts ***!
  \********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass GeneralSubtree {\n    constructor(base, minimum = 0, maximum) {\n        this.base = base;\n        this.minimum = minimum;\n        this.maximum = maximum;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on GeneralSubtree");\n            case -2: throw new errors.X509Error("Invalid construction on GeneralSubtree");\n            case -3: throw new errors.X509Error("Invalid tag number on GeneralSubtree");\n            default: throw new errors.X509Error("Undefined error when validating GeneralSubtree tag");\n        }\n        const generalSubtreeElements = value.sequence;\n        if (generalSubtreeElements.length === 0) {\n            throw new errors.X509Error("Invalid number of elements in GeneralSubtree");\n        }\n        const base = generalSubtreeElements[0];\n        let minimum;\n        let maximum;\n        let fixedPositionElementsEncountered = 1;\n        generalSubtreeElements.slice(1).forEach((element) => {\n            if (element.tagClass === 2) {\n                if (element.tagNumber === 0) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("GeneralSubtree.minimum was not primitively constructed");\n                    }\n                    if (minimum)\n                        throw new errors.X509Error("GeneralSubtree.minimum already defined");\n                    minimum = element.integer;\n                    fixedPositionElementsEncountered++;\n                }\n                else if (element.tagNumber === 1) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("GeneralSubtree.maximum was not primitively constructed");\n                    }\n                    if (maximum)\n                        throw new errors.X509Error("GeneralSubtree.maximum already defined");\n                    maximum = element.integer;\n                    fixedPositionElementsEncountered++;\n                }\n            }\n        });\n        if (!asn1_ts_1.DERElement.isUniquelyTagged(generalSubtreeElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Elements of GeneralSubtree were not uniquely tagged");\n        }\n        if (!asn1_ts_1.DERElement.isInCanonicalOrder(generalSubtreeElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Extended elements of GeneralSubtree were not in canonical order");\n        }\n        if (minimum === 0) {\n            throw new errors.X509Error("GeneralSubtree.minimum was encoded with the default value, "\n                + "which is prohibited by the Distinguished Encoding Rules.");\n        }\n        if (minimum === undefined)\n            minimum = 0;\n        return new GeneralSubtree(base, minimum, maximum);\n    }\n    toElement() {\n        const generalSubtreeElements = [this.base];\n        if (this.minimum) {\n            const minimumElement = new asn1_ts_1.DERElement(2, 0, 0);\n            minimumElement.integer = this.minimum;\n            generalSubtreeElements.push(minimumElement);\n        }\n        if (this.maximum) {\n            const maximumElement = new asn1_ts_1.DERElement(2, 0, 1);\n            maximumElement.integer = this.minimum;\n            generalSubtreeElements.push(maximumElement);\n        }\n        const generalSubtreeElement = new asn1_ts_1.DERElement(0, 1, 16);\n        generalSubtreeElement.sequence = generalSubtreeElements;\n        return generalSubtreeElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return GeneralSubtree.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = GeneralSubtree;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/GeneralSubtree.ts?')},"./source/CertificateExtensions/IssuingDistPointSyntax.ts":
/*!****************************************************************!*\
  !*** ./source/CertificateExtensions/IssuingDistPointSyntax.ts ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ReasonFlags_1 = __importDefault(__webpack_require__(/*! ./ReasonFlags */ "./source/CertificateExtensions/ReasonFlags.ts"));\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass IssuingDistPointSyntax {\n    constructor(distributionPoint, onlyContainsUserPublicKeyCerts = false, onlyContainsCACerts = false, onlySomeReasons, indirectCRL = false) {\n        this.distributionPoint = distributionPoint;\n        this.onlyContainsUserPublicKeyCerts = onlyContainsUserPublicKeyCerts;\n        this.onlyContainsCACerts = onlyContainsCACerts;\n        this.onlySomeReasons = onlySomeReasons;\n        this.indirectCRL = indirectCRL;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on IssuingDistPointSyntax");\n            case -2: throw new errors.X509Error("Invalid construction on IssuingDistPointSyntax");\n            case -3: throw new errors.X509Error("Invalid tag number on IssuingDistPointSyntax");\n            default: throw new errors.X509Error("Undefined error when validating IssuingDistPointSyntax tag");\n        }\n        let distributionPoint;\n        let onlyContainsUserPublicKeyCerts;\n        let onlyContainsCACerts;\n        let onlySomeReasons;\n        let indirectCRL;\n        const issuingDistPointSyntaxElements = value.sequence;\n        let lastEncounteredTagNumber;\n        issuingDistPointSyntaxElements.forEach((element) => {\n            if (!lastEncounteredTagNumber) {\n                lastEncounteredTagNumber = element.tagNumber;\n            }\n            else if (element.tagNumber <= lastEncounteredTagNumber) {\n                throw new errors.X509Error("Elements out of order in IssuingDistPointSyntax.");\n            }\n            if (element.tagClass === 2) {\n                switch (element.tagNumber) {\n                    case (0): {\n                        distributionPoint = element;\n                        break;\n                    }\n                    case (1): {\n                        if (element.construction !== 0) {\n                            throw new errors.X509Error("Invalid construction for IssuingDistPointSyntax.onlyContainsUserPublicKeyCerts.");\n                        }\n                        onlyContainsUserPublicKeyCerts = element.boolean;\n                        break;\n                    }\n                    case (2): {\n                        if (element.construction !== 0) {\n                            throw new errors.X509Error("Invalid construction for IssuingDistPointSyntax.onlyContainsCACerts.");\n                        }\n                        onlyContainsCACerts = element.boolean;\n                        break;\n                    }\n                    case (3): {\n                        if (element.construction !== 1) {\n                            throw new errors.X509Error("Invalid construction for IssuingDistPointSyntax.onlySomeReasons.");\n                        }\n                        onlySomeReasons = ReasonFlags_1.default.fromElement(element);\n                        break;\n                    }\n                    case (4): {\n                        if (element.construction !== 0) {\n                            throw new errors.X509Error("Invalid construction for IssuingDistPointSyntax.indirectCRL.");\n                        }\n                        indirectCRL = element.boolean;\n                        break;\n                    }\n                    default: break;\n                }\n            }\n            lastEncounteredTagNumber = element.tagNumber;\n        });\n        return new IssuingDistPointSyntax(distributionPoint, onlyContainsUserPublicKeyCerts, onlyContainsCACerts, onlySomeReasons, indirectCRL);\n    }\n    toElement() {\n        const issuingDistPointSyntaxElements = [];\n        if (this.distributionPoint) {\n            issuingDistPointSyntaxElements.push(this.distributionPoint);\n        }\n        if (this.onlyContainsUserPublicKeyCerts) {\n            const onlyContainsUserPublicKeyCertsElement = new asn1_ts_1.DERElement(2, 0, 1);\n            onlyContainsUserPublicKeyCertsElement.boolean = this.onlyContainsUserPublicKeyCerts;\n            issuingDistPointSyntaxElements.push(onlyContainsUserPublicKeyCertsElement);\n        }\n        if (this.onlyContainsCACerts) {\n            const onlyContainsCACertsElement = new asn1_ts_1.DERElement(2, 0, 1);\n            onlyContainsCACertsElement.boolean = this.onlyContainsUserPublicKeyCerts;\n            issuingDistPointSyntaxElements.push(onlyContainsCACertsElement);\n        }\n        if (this.onlySomeReasons) {\n            issuingDistPointSyntaxElements.push(this.onlySomeReasons.toElement());\n        }\n        if (this.indirectCRL) {\n            const indirectCRLElement = new asn1_ts_1.DERElement(2, 0, 1);\n            indirectCRLElement.boolean = this.onlyContainsUserPublicKeyCerts;\n            issuingDistPointSyntaxElements.push(indirectCRLElement);\n        }\n        const issuingDistPointSyntaxElement = new asn1_ts_1.DERElement(0, 1, 16);\n        issuingDistPointSyntaxElement.sequence = issuingDistPointSyntaxElements;\n        return issuingDistPointSyntaxElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return IssuingDistPointSyntax.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = IssuingDistPointSyntax;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/IssuingDistPointSyntax.ts?')},"./source/CertificateExtensions/KeyUsage.ts":
/*!**************************************************!*\
  !*** ./source/CertificateExtensions/KeyUsage.ts ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass KeyUsage {\n    constructor(digitalSignature, contentCommitment, keyEncipherment, dataEncipherment, keyAgreement, keyCertSign, cRLSign, encipherOnly, decipherOnly) {\n        this.digitalSignature = digitalSignature;\n        this.contentCommitment = contentCommitment;\n        this.keyEncipherment = keyEncipherment;\n        this.dataEncipherment = dataEncipherment;\n        this.keyAgreement = keyAgreement;\n        this.keyCertSign = keyCertSign;\n        this.cRLSign = cRLSign;\n        this.encipherOnly = encipherOnly;\n        this.decipherOnly = decipherOnly;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [0], [3])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on KeyUsage");\n            case -2: throw new errors.X509Error("Invalid construction on KeyUsage");\n            case -3: throw new errors.X509Error("Invalid tag number on KeyUsage");\n            default: throw new errors.X509Error("Undefined error when validating KeyUsage tag");\n        }\n        const bits = value.bitString;\n        return new KeyUsage(((bits.length > 0) ? bits[0] : false), ((bits.length > 1) ? bits[1] : false), ((bits.length > 2) ? bits[2] : false), ((bits.length > 3) ? bits[3] : false), ((bits.length > 4) ? bits[4] : false), ((bits.length > 5) ? bits[5] : false), ((bits.length > 6) ? bits[6] : false), ((bits.length > 7) ? bits[7] : false), ((bits.length > 8) ? bits[8] : false));\n    }\n    toElement() {\n        const keyUsageElement = new asn1_ts_1.DERElement(0, 0, 3);\n        keyUsageElement.bitString = [\n            this.digitalSignature,\n            this.contentCommitment,\n            this.keyEncipherment,\n            this.dataEncipherment,\n            this.keyAgreement,\n            this.keyCertSign,\n            this.cRLSign,\n            this.encipherOnly,\n            this.decipherOnly,\n        ];\n        return keyUsageElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return KeyUsage.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = KeyUsage;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/KeyUsage.ts?')},"./source/CertificateExtensions/NameConstraintsSyntax.ts":
/*!***************************************************************!*\
  !*** ./source/CertificateExtensions/NameConstraintsSyntax.ts ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst GeneralSubtree_1 = __importDefault(__webpack_require__(/*! ./GeneralSubtree */ "./source/CertificateExtensions/GeneralSubtree.ts"));\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass NameConstraintsSyntax {\n    constructor(permittedSubtrees, excludedSubtrees) {\n        this.permittedSubtrees = permittedSubtrees;\n        this.excludedSubtrees = excludedSubtrees;\n        if (!permittedSubtrees && !excludedSubtrees) {\n            throw new errors.X509Error("NameConstraintsSyntax requires either permittedSubtrees or excludedSubtrees to be defined.");\n        }\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on NameConstraintsSyntax");\n            case -2: throw new errors.X509Error("Invalid construction on NameConstraintsSyntax");\n            case -3: throw new errors.X509Error("Invalid tag number on NameConstraintsSyntax");\n            default: throw new errors.X509Error("Undefined error when validating NameConstraintsSyntax tag");\n        }\n        const nameConstraintsSyntaxElements = value.sequence;\n        if (nameConstraintsSyntaxElements.length === 0) {\n            throw new errors.X509Error("NameConstraintsSyntax SEQUENCE was constituted from zero elements");\n        }\n        let permittedSubtrees;\n        let excludedSubtrees;\n        let fixedPositionElementsEncountered = 0;\n        nameConstraintsSyntaxElements.forEach((element) => {\n            if (element.tagClass === 2) {\n                if (element.tagNumber === 0) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("NameConstraintsSyntax.permittedSubtrees was not primitively constructed");\n                    }\n                    if (permittedSubtrees) {\n                        throw new errors.X509Error("NameConstraintsSyntax.permittedSubtrees already defined");\n                    }\n                    permittedSubtrees = element.sequence.map(GeneralSubtree_1.default.fromElement);\n                    fixedPositionElementsEncountered++;\n                }\n                else if (element.tagNumber === 1) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("NameConstraintsSyntax.excludedSubtrees was not primitively constructed");\n                    }\n                    if (excludedSubtrees) {\n                        throw new errors.X509Error("NameConstraintsSyntax.excludedSubtrees already defined");\n                    }\n                    excludedSubtrees = element.sequence.map((xsub) => GeneralSubtree_1.default.fromElement(xsub));\n                    fixedPositionElementsEncountered++;\n                }\n            }\n        });\n        if (!asn1_ts_1.DERElement.isUniquelyTagged(nameConstraintsSyntaxElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Elements of GeneralSubtree were not uniquely tagged");\n        }\n        if (!asn1_ts_1.DERElement.isInCanonicalOrder(nameConstraintsSyntaxElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Extended elements of GeneralSubtree were not in canonical order");\n        }\n        return new NameConstraintsSyntax(permittedSubtrees, excludedSubtrees);\n    }\n    toElement() {\n        const nameConstraintsSyntaxElements = [];\n        if (this.permittedSubtrees) {\n            const permittedSubtreesElement = new asn1_ts_1.DERElement(2, 1, 0);\n            permittedSubtreesElement.sequence\n                = this.permittedSubtrees.map((psub) => psub.toElement());\n            nameConstraintsSyntaxElements.push(permittedSubtreesElement);\n        }\n        if (this.excludedSubtrees) {\n            const excludedSubtreesElement = new asn1_ts_1.DERElement(2, 1, 1);\n            excludedSubtreesElement.sequence\n                = this.excludedSubtrees.map((xsub) => xsub.toElement());\n            nameConstraintsSyntaxElements.push(excludedSubtreesElement);\n        }\n        const nameConstraintsSyntaxElement = new asn1_ts_1.DERElement(0, 1, 16);\n        nameConstraintsSyntaxElement.sequence = nameConstraintsSyntaxElements;\n        return nameConstraintsSyntaxElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return NameConstraintsSyntax.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = NameConstraintsSyntax;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/NameConstraintsSyntax.ts?')},"./source/CertificateExtensions/PolicyConstraintsSyntax.ts":
/*!*****************************************************************!*\
  !*** ./source/CertificateExtensions/PolicyConstraintsSyntax.ts ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass PolicyConstraintsSyntax {\n    constructor(requireExplicitPolicy, inhibitPolicyMapping) {\n        this.requireExplicitPolicy = requireExplicitPolicy;\n        this.inhibitPolicyMapping = inhibitPolicyMapping;\n        if (!requireExplicitPolicy && !inhibitPolicyMapping) {\n            throw new errors.X509Error("PolicyConstraintsSyntax must have either requireExplicitPolicy or inhibitPolicyMapping set.");\n        }\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on PolicyConstraintsSyntax");\n            case -2: throw new errors.X509Error("Invalid construction on PolicyConstraintsSyntax");\n            case -3: throw new errors.X509Error("Invalid tag number on PolicyConstraintsSyntax");\n            default: throw new errors.X509Error("Undefined error when validating PolicyConstraintsSyntax tag");\n        }\n        const policyConstraintsSyntaxElements = value.sequence;\n        if (policyConstraintsSyntaxElements.length === 0) {\n            throw new errors.X509Error("PolicyConstraintsSyntax SEQUENCE was constituted from zero elements");\n        }\n        let requireExplicitPolicy;\n        let inhibitPolicyMapping;\n        let fixedPositionElementsEncountered = 0;\n        policyConstraintsSyntaxElements.forEach((element, index) => {\n            if (element.tagClass === 2) {\n                if (element.tagNumber === 0) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("PolicyConstraintsSyntax.requireExplicitPolicy was not primitively constructed.");\n                    }\n                    if (requireExplicitPolicy) {\n                        throw new errors.X509Error("PolicyConstraintsSyntax.requireExplicitPolicy already defined.");\n                    }\n                    requireExplicitPolicy = element.integer;\n                    fixedPositionElementsEncountered++;\n                }\n                else if (element.tagNumber === 1) {\n                    if (element.construction !== 0) {\n                        throw new errors.X509Error("PolicyConstraintsSyntax.inhibitPolicyMapping was not primitively constructed.");\n                    }\n                    if (inhibitPolicyMapping) {\n                        throw new errors.X509Error("PolicyConstraintsSyntax.inhibitPolicyMapping already defined.");\n                    }\n                    if (index === 1\n                        && (policyConstraintsSyntaxElements[0].tagClass !== 0\n                            || policyConstraintsSyntaxElements[0].construction !== 0\n                            || policyConstraintsSyntaxElements[0].tagNumber !== 2)) {\n                        throw new errors.X509Error("PolicyConstraintsSyntax missing "\n                            + "requireExplicitPolicy element before "\n                            + "inhibitPolicyMapping when "\n                            + "inhibitPolicyMapping was the second element.");\n                    }\n                    inhibitPolicyMapping = element.integer;\n                    fixedPositionElementsEncountered++;\n                }\n            }\n        });\n        if (!asn1_ts_1.DERElement.isUniquelyTagged(policyConstraintsSyntaxElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Elements of PolicyConstraintsSyntax were not uniquely tagged");\n        }\n        if (!asn1_ts_1.DERElement.isInCanonicalOrder(policyConstraintsSyntaxElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Extended elements of PolicyConstraintsSyntax were not in canonical order");\n        }\n        return new PolicyConstraintsSyntax(requireExplicitPolicy, inhibitPolicyMapping);\n    }\n    toElement() {\n        const policyConstraintsSyntaxElements = [];\n        if (this.requireExplicitPolicy) {\n            const requireExplicitPolicyElement = new asn1_ts_1.DERElement(2, 0, 0);\n            requireExplicitPolicyElement.integer = this.requireExplicitPolicy;\n            policyConstraintsSyntaxElements.push(requireExplicitPolicyElement);\n        }\n        if (this.inhibitPolicyMapping) {\n            const inhibitPolicyMappingElement = new asn1_ts_1.DERElement(2, 0, 1);\n            inhibitPolicyMappingElement.integer = this.inhibitPolicyMapping;\n            policyConstraintsSyntaxElements.push(inhibitPolicyMappingElement);\n        }\n        const policyConstraintsSyntaxElement = new asn1_ts_1.DERElement(0, 1, 16);\n        policyConstraintsSyntaxElement.sequence = policyConstraintsSyntaxElements;\n        return policyConstraintsSyntaxElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return PolicyConstraintsSyntax.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = PolicyConstraintsSyntax;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/PolicyConstraintsSyntax.ts?')},"./source/CertificateExtensions/PolicyInformation.ts":
/*!***********************************************************!*\
  !*** ./source/CertificateExtensions/PolicyInformation.ts ***!
  \***********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst PolicyQualifierInfo_1 = __importDefault(__webpack_require__(/*! ./PolicyQualifierInfo */ "./source/CertificateExtensions/PolicyQualifierInfo.ts"));\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass PolicyInformation {\n    constructor(policyIdentifier, policyQualifiers) {\n        this.policyIdentifier = policyIdentifier;\n        this.policyQualifiers = policyQualifiers;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on PolicyInformation");\n            case -2: throw new errors.X509Error("Invalid construction on PolicyInformation");\n            case -3: throw new errors.X509Error("Invalid tag number on PolicyInformation");\n            default: throw new errors.X509Error("Undefined error when validating PolicyInformation tag");\n        }\n        const policyInformationElements = value.sequence;\n        let policyQualifiers;\n        switch (policyInformationElements[0].validateTag([0], [0], [6])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on PolicyInformation.policyIdentifier");\n            case -2: throw new errors.X509Error("Invalid construction on PolicyInformation.policyIdentifier");\n            case -3: throw new errors.X509Error("Invalid tag number on PolicyInformation.policyIdentifier");\n            default: throw new errors.X509Error("Undefined error when validating PolicyInformation.policyIdentifier tag");\n        }\n        const policyIdentifier = policyInformationElements[0].objectIdentifier;\n        let fixedPositionElementsEncountered = 1;\n        if (policyInformationElements.length > 1) {\n            policyQualifiers = policyInformationElements[1].sequence.map((element) => PolicyQualifierInfo_1.default.fromElement(element));\n            fixedPositionElementsEncountered++;\n        }\n        if (!asn1_ts_1.DERElement.isInCanonicalOrder(policyInformationElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Extended elements of PolicyInformation were not in canonical order");\n        }\n        return new PolicyInformation(policyIdentifier, policyQualifiers);\n    }\n    toElement() {\n        const policyInformationElements = [\n            new asn1_ts_1.DERElement(0, 0, 6),\n        ];\n        if (this.policyQualifiers) {\n            const policyQualifiersElement = new asn1_ts_1.DERElement(0, 1, 16);\n            policyQualifiersElement.sequence = this.policyQualifiers.map((pqi) => pqi.toElement());\n            policyInformationElements.push(policyQualifiersElement);\n        }\n        const policyInformationElement = new asn1_ts_1.DERElement(0, 1, 16);\n        policyInformationElement.sequence = policyInformationElements;\n        return policyInformationElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return PolicyInformation.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = PolicyInformation;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/PolicyInformation.ts?')},"./source/CertificateExtensions/PolicyMapping.ts":
/*!*******************************************************!*\
  !*** ./source/CertificateExtensions/PolicyMapping.ts ***!
  \*******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass PolicyMapping {\n    constructor(issuerDomainPolicy, subjectDomainPolicy) {\n        this.issuerDomainPolicy = issuerDomainPolicy;\n        this.subjectDomainPolicy = subjectDomainPolicy;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on inner sequence of PolicyMappingsSyntax");\n            case -2: throw new errors.X509Error("Invalid construction on inner sequence of PolicyMappingsSyntax");\n            case -3: throw new errors.X509Error("Invalid tag number on inner sequence of PolicyMappingsSyntax");\n            default: {\n                throw new errors.X509Error("Undefined error when validating inner sequence of PolicyMappingsSyntax tag");\n            }\n        }\n        const policyMappingElements = value.sequence;\n        if (policyMappingElements.length < 2) {\n            throw new errors.X509Error("Too few elements in inner sequence of PolicyMappingsSyntax");\n        }\n        switch (policyMappingElements[0].validateTag([0], [0], [6])) {\n            case 0: break;\n            case -1: {\n                throw new errors.X509Error("Invalid tag class on inner sequence of PolicyMappingsSyntax."\n                    + "SEQUENCE.SEQUENCE.subjectDomainPolicy.");\n            }\n            case -2: {\n                throw new errors.X509Error("Invalid construction on inner sequence of "\n                    + "PolicyMappingsSyntax.SEQUENCE.SEQUENCE.subjectDomainPolicy.");\n            }\n            case -3: {\n                throw new errors.X509Error("Invalid tag number on inner sequence of PolicyMappingsSyntax"\n                    + ".SEQUENCE.SEQUENCE.subjectDomainPolicy.");\n            }\n            default: {\n                throw new errors.X509Error("Undefined error when validating inner sequence of "\n                    + "PolicyMappingsSyntax.SEQUENCE.SEQUENCE.subjectDomainPolicy "\n                    + "tag.");\n            }\n        }\n        switch (policyMappingElements[1].validateTag([0], [0], [6])) {\n            case 0: break;\n            case -1: {\n                throw new errors.X509Error("Invalid tag class on inner sequence of PolicyMappingsSyntax"\n                    + ".SEQUENCE.SEQUENCE.issuerDomainPolicy.");\n            }\n            case -2: {\n                throw new errors.X509Error("Invalid construction on inner sequence of "\n                    + "PolicyMappingsSyntax.SEQUENCE.SEQUENCE.issuerDomainPolicy.");\n            }\n            case -3: {\n                throw new errors.X509Error("Invalid tag number on inner sequence of "\n                    + "PolicyMappingsSyntax.SEQUENCE.SEQUENCE.issuerDomainPolicy.");\n            }\n            default: {\n                throw new errors.X509Error("Undefined error when validating inner sequence of "\n                    + "PolicyMappingsSyntax.SEQUENCE.SEQUENCE.issuerDomainPolicy "\n                    + "tag.");\n            }\n        }\n        return new PolicyMapping(policyMappingElements[0].objectIdentifier, policyMappingElements[1].objectIdentifier);\n    }\n    toElement() {\n        const issuerDomainPolicyElement = new asn1_ts_1.DERElement(0, 0, 6);\n        issuerDomainPolicyElement.objectIdentifier = this.issuerDomainPolicy;\n        const subjectDomainPolicyElement = new asn1_ts_1.DERElement(0, 0, 6);\n        subjectDomainPolicyElement.objectIdentifier = this.subjectDomainPolicy;\n        const policyMappingElement = new asn1_ts_1.DERElement(0, 1, 16);\n        policyMappingElement.sequence = [\n            issuerDomainPolicyElement,\n            subjectDomainPolicyElement,\n        ];\n        return policyMappingElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return PolicyMapping.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = PolicyMapping;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/PolicyMapping.ts?')},"./source/CertificateExtensions/PolicyQualifierInfo.ts":
/*!*************************************************************!*\
  !*** ./source/CertificateExtensions/PolicyQualifierInfo.ts ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass PolicyQualifierInfo {\n    constructor(policyQualifierId, qualifier) {\n        this.policyQualifierId = policyQualifierId;\n        this.qualifier = qualifier;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on PolicyQualifierInfo");\n            case -2: throw new errors.X509Error("Invalid construction on PolicyQualifierInfo");\n            case -3: throw new errors.X509Error("Invalid tag number on PolicyQualifierInfo");\n            default: throw new errors.X509Error("Undefined error when validating PolicyQualifierInfo tag");\n        }\n        const policyQualifierInfoElements = value.sequence;\n        let qualifier;\n        if (policyQualifierInfoElements.length === 0) {\n            throw new errors.X509Error("PolicyQualifierInfo contained zero elements");\n        }\n        switch (policyQualifierInfoElements[0].validateTag([0], [0], [6])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on PolicyQualifierInfo.policyQualifierId");\n            case -2: throw new errors.X509Error("Invalid construction on PolicyQualifierInfo.policyQualifierId");\n            case -3: throw new errors.X509Error("Invalid tag number on PolicyQualifierInfo.policyQualifierId");\n            default: {\n                throw new errors.X509Error("Undefined error when validating PolicyQualifierInfo.policyQualifierId tag");\n            }\n        }\n        const policyQualifierId = policyQualifierInfoElements[0].objectIdentifier;\n        let fixedPositionElementsEncountered = 1;\n        if (policyQualifierInfoElements.length > 1) {\n            qualifier = policyQualifierInfoElements[1];\n            fixedPositionElementsEncountered++;\n        }\n        if (!asn1_ts_1.DERElement.isInCanonicalOrder(policyQualifierInfoElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Extended elements of PolicyQualifierInfo were not in canonical order");\n        }\n        return new PolicyQualifierInfo(policyQualifierId, qualifier);\n    }\n    toElement() {\n        const policyQualifierInfoElements = [\n            new asn1_ts_1.DERElement(0, 0, 6),\n        ];\n        if (this.qualifier)\n            policyQualifierInfoElements.push(this.qualifier);\n        const policyQualifierInfoElement = new asn1_ts_1.DERElement(0, 1, 16);\n        policyQualifierInfoElement.sequence = policyQualifierInfoElements;\n        return policyQualifierInfoElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return PolicyQualifierInfo.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = PolicyQualifierInfo;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/PolicyQualifierInfo.ts?')},"./source/CertificateExtensions/PrivateKeyUsagePeriod.ts":
/*!***************************************************************!*\
  !*** ./source/CertificateExtensions/PrivateKeyUsagePeriod.ts ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass PrivateKeyUsagePeriod {\n    constructor(notBefore, notAfter) {\n        this.notBefore = notBefore;\n        this.notAfter = notAfter;\n        if (!notBefore && !notAfter) {\n            throw new errors.X509Error("Either notBefore or notAfter must be set in PrivateKeyUsagePeriod");\n        }\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on inner sequence of PrivateKeyUsagePeriod");\n            case -2: throw new errors.X509Error("Invalid construction on inner sequence of PrivateKeyUsagePeriod");\n            case -3: throw new errors.X509Error("Invalid tag number on inner sequence of PrivateKeyUsagePeriod");\n            default: {\n                throw new errors.X509Error("Undefined error when validating inner sequence of PrivateKeyUsagePeriod tag");\n            }\n        }\n        const privateKeyUsagePeriodElements = value.sequence;\n        if (privateKeyUsagePeriodElements.length === 0) {\n            throw new errors.X509Error("PrivateKeyUsagePeriod must have at least one element in SEQUENCE");\n        }\n        let notBefore;\n        let notAfter;\n        let fixedPositionElementsEncountered = 0;\n        privateKeyUsagePeriodElements.forEach((element) => {\n            if (element.tagClass === 2) {\n                if (element.tagNumber === 0) {\n                    if (notBefore)\n                        throw new errors.X509Error("PrivateKeyUsagePeriod.notBefore already defined");\n                    notBefore = element.generalizedTime;\n                    fixedPositionElementsEncountered++;\n                }\n                else if (element.tagNumber === 1) {\n                    if (notAfter)\n                        throw new errors.X509Error("PrivateKeyUsagePeriod.notAfter already defined");\n                    notAfter = element.generalizedTime;\n                    fixedPositionElementsEncountered++;\n                }\n            }\n        });\n        if (!asn1_ts_1.DERElement.isInCanonicalOrder(privateKeyUsagePeriodElements.slice(fixedPositionElementsEncountered))) {\n            throw new errors.X509Error("Extended elements of PrivateKeyUsagePeriod were not in canonical order");\n        }\n        return new PrivateKeyUsagePeriod(notBefore, notAfter);\n    }\n    toElement() {\n        const privateKeyUsagePeriodElements = [];\n        if (this.notBefore) {\n            const notBeforeElement = new asn1_ts_1.DERElement(0, 0, 24);\n            notBeforeElement.generalizedTime = this.notBefore;\n            privateKeyUsagePeriodElements.push(notBeforeElement);\n        }\n        if (this.notAfter) {\n            const notAfterElement = new asn1_ts_1.DERElement(0, 0, 24);\n            notAfterElement.generalizedTime = this.notAfter;\n            privateKeyUsagePeriodElements.push(notAfterElement);\n        }\n        const privateKeyUsagePeriodElement = new asn1_ts_1.DERElement(0, 1, 16);\n        privateKeyUsagePeriodElement.sequence = privateKeyUsagePeriodElements;\n        return privateKeyUsagePeriodElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return PrivateKeyUsagePeriod.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = PrivateKeyUsagePeriod;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/PrivateKeyUsagePeriod.ts?')},"./source/CertificateExtensions/ReasonFlags.ts":
/*!*****************************************************!*\
  !*** ./source/CertificateExtensions/ReasonFlags.ts ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass ReasonFlags {\n    constructor(unused = false, keyCompromise = false, cACompromise = false, affiliationChanged = false, superseded = false, cessationOfOperation = false, certificateHold = false, privilegeWithdrawn = false, aACompromise = false, weakAlgorithmOrKeySize = false) {\n        this.unused = unused;\n        this.keyCompromise = keyCompromise;\n        this.cACompromise = cACompromise;\n        this.affiliationChanged = affiliationChanged;\n        this.superseded = superseded;\n        this.cessationOfOperation = cessationOfOperation;\n        this.certificateHold = certificateHold;\n        this.privilegeWithdrawn = privilegeWithdrawn;\n        this.aACompromise = aACompromise;\n        this.weakAlgorithmOrKeySize = weakAlgorithmOrKeySize;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [0], [3])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on ReasonFlags");\n            case -2: throw new errors.X509Error("Invalid construction on ReasonFlags");\n            case -3: throw new errors.X509Error("Invalid tag number on ReasonFlags");\n            default: throw new errors.X509Error("Undefined error when validating ReasonFlags tag");\n        }\n        const bits = value.bitString;\n        return new ReasonFlags(((bits.length >= 1) ? bits[0] : false), ((bits.length >= 2) ? bits[1] : false), ((bits.length >= 3) ? bits[2] : false), ((bits.length >= 4) ? bits[3] : false), ((bits.length >= 5) ? bits[4] : false), ((bits.length >= 6) ? bits[5] : false), ((bits.length >= 7) ? bits[6] : false), ((bits.length >= 8) ? bits[7] : false), ((bits.length >= 9) ? bits[8] : false), ((bits.length >= 10) ? bits[9] : false));\n    }\n    toElement() {\n        const ret = new asn1_ts_1.DERElement(0, 1, 3);\n        ret.bitString = [\n            this.unused,\n            this.keyCompromise,\n            this.cACompromise,\n            this.affiliationChanged,\n            this.superseded,\n            this.cessationOfOperation,\n            this.certificateHold,\n            this.privilegeWithdrawn,\n            this.aACompromise,\n            this.weakAlgorithmOrKeySize,\n        ];\n        return ret;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return ReasonFlags.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = ReasonFlags;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/ReasonFlags.ts?')},"./source/CertificateExtensions/index.ts":
/*!***********************************************!*\
  !*** ./source/CertificateExtensions/index.ts ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.certificateExtensionsOID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 26]);\nvar AuthorityKeyIdentifier_1 = __webpack_require__(/*! ./AuthorityKeyIdentifier */ "./source/CertificateExtensions/AuthorityKeyIdentifier.ts");\nexports.AuthorityKeyIdentifier = AuthorityKeyIdentifier_1.default;\nvar BasicConstraintsSyntax_1 = __webpack_require__(/*! ./BasicConstraintsSyntax */ "./source/CertificateExtensions/BasicConstraintsSyntax.ts");\nexports.BasicConstraintsSyntax = BasicConstraintsSyntax_1.default;\nvar DistributionPoint_1 = __webpack_require__(/*! ./DistributionPoint */ "./source/CertificateExtensions/DistributionPoint.ts");\nexports.DistributionPoint = DistributionPoint_1.default;\nvar EDIPartyName_1 = __webpack_require__(/*! ./EDIPartyName */ "./source/CertificateExtensions/EDIPartyName.ts");\nexports.EDIPartyName = EDIPartyName_1.default;\nvar GeneralName_1 = __webpack_require__(/*! ./GeneralName */ "./source/CertificateExtensions/GeneralName.ts");\nexports.printGeneralName = GeneralName_1.printGeneralName;\nvar GeneralSubtree_1 = __webpack_require__(/*! ./GeneralSubtree */ "./source/CertificateExtensions/GeneralSubtree.ts");\nexports.GeneralSubtree = GeneralSubtree_1.default;\nvar IssuingDistPointSyntax_1 = __webpack_require__(/*! ./IssuingDistPointSyntax */ "./source/CertificateExtensions/IssuingDistPointSyntax.ts");\nexports.IssuingDistPointSyntax = IssuingDistPointSyntax_1.default;\nvar KeyUsage_1 = __webpack_require__(/*! ./KeyUsage */ "./source/CertificateExtensions/KeyUsage.ts");\nexports.KeyUsage = KeyUsage_1.default;\nvar NameConstraintsSyntax_1 = __webpack_require__(/*! ./NameConstraintsSyntax */ "./source/CertificateExtensions/NameConstraintsSyntax.ts");\nexports.NameConstraintsSyntax = NameConstraintsSyntax_1.default;\nvar PolicyConstraintsSyntax_1 = __webpack_require__(/*! ./PolicyConstraintsSyntax */ "./source/CertificateExtensions/PolicyConstraintsSyntax.ts");\nexports.PolicyConstraintsSyntax = PolicyConstraintsSyntax_1.default;\nvar PolicyInformation_1 = __webpack_require__(/*! ./PolicyInformation */ "./source/CertificateExtensions/PolicyInformation.ts");\nexports.PolicyInformation = PolicyInformation_1.default;\nvar PolicyMapping_1 = __webpack_require__(/*! ./PolicyMapping */ "./source/CertificateExtensions/PolicyMapping.ts");\nexports.PolicyMapping = PolicyMapping_1.default;\nvar PolicyQualifierInfo_1 = __webpack_require__(/*! ./PolicyQualifierInfo */ "./source/CertificateExtensions/PolicyQualifierInfo.ts");\nexports.PolicyQualifierInfo = PolicyQualifierInfo_1.default;\nvar PrivateKeyUsagePeriod_1 = __webpack_require__(/*! ./PrivateKeyUsagePeriod */ "./source/CertificateExtensions/PrivateKeyUsagePeriod.ts");\nexports.PrivateKeyUsagePeriod = PrivateKeyUsagePeriod_1.default;\nvar ReasonFlags_1 = __webpack_require__(/*! ./ReasonFlags */ "./source/CertificateExtensions/ReasonFlags.ts");\nexports.ReasonFlags = ReasonFlags_1.default;\n\n\n//# sourceURL=webpack://x509/./source/CertificateExtensions/index.ts?')},"./source/InformationFramework/AttributeTypeAndValue.ts":
/*!**************************************************************!*\
  !*** ./source/InformationFramework/AttributeTypeAndValue.ts ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst UnboundedDirectoryString_1 = __importDefault(__webpack_require__(/*! ../SelectedAttributeTypes/Version8/UnboundedDirectoryString */ "./source/SelectedAttributeTypes/Version8/UnboundedDirectoryString.ts"));\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass AttributeTypeAndValue {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static escapeDirectoryCharacters(unescaped) {\n        return unescaped.replace(",", "\\\\,").replace("+", "\\\\+");\n    }\n    toString() {\n        const oidString = this.type.toString();\n        if (oidString in AttributeTypeAndValue.attributeToNameMapping\n            && oidString in AttributeTypeAndValue.attributeToValuePrinterMapping) {\n            const attributeNameString = AttributeTypeAndValue.attributeToNameMapping[oidString];\n            const valueString = AttributeTypeAndValue.escapeDirectoryCharacters(AttributeTypeAndValue.attributeToValuePrinterMapping[oidString](this.value));\n            return `${attributeNameString}=${valueString}`;\n        }\n        else {\n            return `${oidString}=${this.value.toBytes()}`;\n        }\n    }\n    static fromElement(value) {\n        const attributeTypeAndValueElements = value.sequence;\n        if (attributeTypeAndValueElements.length !== 2) {\n            throw new errors.X509Error("Invalid number of elements in AttributeTypeAndValue");\n        }\n        switch (attributeTypeAndValueElements[0].validateTag([0], [0], [6])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on AttributeTypeAndValue.type");\n            case -2: throw new errors.X509Error("Invalid construction on AttributeTypeAndValue.type");\n            case -3: throw new errors.X509Error("Invalid tag number on AttributeTypeAndValue.type");\n            default: throw new errors.X509Error("Undefined error when validating AttributeTypeAndValue.type tag");\n        }\n        return new AttributeTypeAndValue(attributeTypeAndValueElements[0].objectIdentifier, attributeTypeAndValueElements[1]);\n    }\n    toElement() {\n        const typeElement = new asn1_ts_1.DERElement();\n        typeElement.tagNumber = 6;\n        typeElement.objectIdentifier = this.type;\n        const attributeTypeAndValueElement = new asn1_ts_1.DERElement();\n        attributeTypeAndValueElement.tagClass = 0;\n        attributeTypeAndValueElement.construction = 1;\n        attributeTypeAndValueElement.tagNumber = 16;\n        attributeTypeAndValueElement.sequence = [typeElement, this.value];\n        return attributeTypeAndValueElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return AttributeTypeAndValue.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = AttributeTypeAndValue;\nAttributeTypeAndValue.attributeToNameMapping = {\n    "2.5.4.3": "cn",\n    "2.5.4.7.1": "c-l",\n    "2.5.4.8.1": "c-st",\n    "2.5.4.9.1": "c-street",\n    "2.5.4.10.1": "c-o",\n    "2.5.4.11.1": "c-ou",\n    "2.5.4.16.1": "c-PostalAddress",\n    "2.5.4.17.1": "c-PostalCode",\n    "2.5.4.18.1": "c-PostOfficeBox",\n    "2.5.4.19.1": "c-PhysicalDeliveryOfficeName",\n    "2.5.4.20.1": "c-TelephoneNumber",\n    "2.5.4.21.1": "c-TelexNumber",\n    "2.5.4.23.1": "c-FacsimileTelephoneNumber",\n    "2.5.4.25.1": "c-InternationalISDNNumber",\n    "2.5.4.2": "knowledgeInformation",\n    "2.5.4.4": "sn",\n    "2.5.4.5": "serialNumber",\n    "2.5.4.6": "c",\n    "2.5.4.7": "l",\n    "2.5.4.8": "st",\n    "2.5.4.9": "streetAddress",\n    "2.5.4.10": "o",\n    "2.5.4.11": "ou",\n    "2.5.4.12": "title",\n    "2.5.4.14": "searchGuide",\n    "2.5.4.15": "businessCategory",\n    "2.5.4.16": "postalAddress",\n    "2.5.4.17": "postalCode",\n    "2.5.4.18": "postOfficeBox",\n    "2.5.4.19": "physicalDeliveryOfficeName",\n    "2.5.4.20": "telephoneNumber",\n    "2.5.4.21": "telexNumber",\n    "2.5.4.22": "teletexTerminalIdentifier",\n    "2.5.4.23": "facsimileTelephoneNumber",\n    "2.5.4.24": "x121Address",\n    "2.5.4.25": "internationaliSDNNumber",\n    "2.5.4.26": "registeredAddress",\n    "2.5.4.27": "destinationIndicator",\n    "2.5.4.28": "preferredDeliveryMethod",\n    "2.5.4.29": "presentationAddress",\n    "2.5.4.30": "supportedApplicationContext",\n    "2.5.4.31": "member",\n    "2.5.4.32": "owner",\n    "2.5.4.33": "roleOccupant",\n    "2.5.4.36": "userCertificate",\n    "2.5.4.37": "cACertificate",\n    "2.5.4.38": "authorityRevocationList",\n    "2.5.4.39": "certificateRevocationList",\n    "2.5.4.40": "crossCertificatePair",\n    "2.5.4.42": "gn",\n    "2.5.4.43": "initials",\n    "2.5.4.44": "generationQualifier",\n    "2.5.4.45": "x500UniqueIdentifier",\n    "2.5.4.46": "dnQualifier",\n    "2.5.4.47": "enhancedSearchGuide",\n    "2.5.4.48": "protocolInformation",\n    "2.5.4.50": "uniqueMember",\n    "2.5.4.51": "houseIdentifier",\n    "2.5.4.52": "supportedAlgorithms",\n    "2.5.4.53": "deltaRevocationList",\n    "2.5.4.54": "dmdName",\n    "2.5.4.65": "pseudonym",\n    "0.9.2342.19200300.100.1.3": "mail",\n    "0.9.2342.19200300.100.1.25": "dc",\n    "0.9.2342.19200300.100.1.37": "associatedDomain",\n    "1.2.840.113549.1.9.1": "emailAddress",\n    "0.9.2342.19200300.100.1.2": "textEncodedORAddress",\n    "0.9.2342.19200300.100.1.4": "info",\n    "0.9.2342.19200300.100.1.5": "favouriteDrink",\n    "0.9.2342.19200300.100.1.6": "roomNumber",\n    "0.9.2342.19200300.100.1.7": "photo",\n    "0.9.2342.19200300.100.1.8": "userClass",\n    "0.9.2342.19200300.100.1.9": "host",\n    "0.9.2342.19200300.100.1.10": "manager",\n    "0.9.2342.19200300.100.1.11": "documentIdentifier",\n    "0.9.2342.19200300.100.1.12": "documentTitle",\n    "0.9.2342.19200300.100.1.13": "documentVersion",\n    "0.9.2342.19200300.100.1.14": "documentAuthor",\n    "0.9.2342.19200300.100.1.15": "documentLocation",\n    "0.9.2342.19200300.100.1.20": "homeTelephoneNumber",\n    "0.9.2342.19200300.100.1.21": "secretary",\n    "0.9.2342.19200300.100.1.22": "otherMailbox",\n    "0.9.2342.19200300.100.1.26": "aRecord",\n    "0.9.2342.19200300.100.1.27": "mDRecord",\n    "0.9.2342.19200300.100.1.28": "mXRecord",\n    "0.9.2342.19200300.100.1.29": "nSRecord",\n    "0.9.2342.19200300.100.1.30": "sOARecord",\n    "0.9.2342.19200300.100.1.31": "cNAMERecord",\n    "0.9.2342.19200300.100.1.38": "associatedName",\n    "0.9.2342.19200300.100.1.39": "homePostalAddress",\n    "0.9.2342.19200300.100.1.40": "personalTitle",\n    "0.9.2342.19200300.100.1.41": "mobileTelephoneNumber",\n    "0.9.2342.19200300.100.1.42": "pagerTelephoneNumber",\n    "0.9.2342.19200300.100.1.43": "friendlyCountryName",\n    "0.9.2342.19200300.100.1.44": "uniqueIdentifier",\n    "0.9.2342.19200300.100.1.45": "organizationalStatus",\n    "0.9.2342.19200300.100.1.46": "janetMailbox",\n    "0.9.2342.19200300.100.1.47": "mailPreferenceOption",\n    "0.9.2342.19200300.100.1.48": "buildingName",\n    "0.9.2342.19200300.100.1.49": "dSAQuality",\n    "0.9.2342.19200300.100.1.50": "singleLevelQuality",\n    "0.9.2342.19200300.100.1.51": "subtreeMinimumQuality",\n    "0.9.2342.19200300.100.1.52": "subtreeMaximumQuality",\n    "0.9.2342.19200300.100.1.53": "personalSignature",\n    "0.9.2342.19200300.100.1.54": "dITRedirect",\n    "0.9.2342.19200300.100.1.55": "audio",\n    "0.9.2342.19200300.100.1.56": "documentPublisher",\n    "2.16.840.1.113730.3.1.1": "carLicense",\n    "2.16.840.1.113730.3.1.2": "departmentNumber",\n    "2.16.840.1.113730.3.1.241": "displayName",\n    "2.16.840.1.113730.3.1.3": "employeeNumber",\n    "2.16.840.1.113730.3.1.4": "employeeType",\n    "0.9.2342.19200300.100.1.60": "jpegPhoto",\n    "2.16.840.1.113730.3.1.39": "preferredLanguage",\n    "2.16.840.1.113730.3.1.40": "userSMIMECertificate",\n    "2.16.840.1.113730.3.1.216": "userPKCS12",\n    "2.16.840.1.113730.3.1.13": "mailLocalAddress",\n    "2.16.840.1.113730.3.1.18": "mailHost",\n    "2.16.840.1.113730.3.1.47": "mailRoutingAddress",\n    "1.3.6.1.4.1.42.2.27.2.1.15": "rfc822MailMember",\n    "1.3.6.1.1.1.1.2": "gecos",\n    "1.3.6.1.1.1.1.3": "homeDirectory",\n    "1.3.6.1.1.1.1.4": "loginShell",\n    "1.3.6.1.1.1.1.5": "shadowLastChange",\n    "1.3.6.1.1.1.1.6": "shadowMin",\n    "1.3.6.1.1.1.1.7": "shadowMax",\n    "1.3.6.1.1.1.1.8": "shadowWarning",\n    "1.3.6.1.1.1.1.9": "shadowInactive",\n    "1.3.6.1.1.1.1.10": "shadowExpire",\n    "1.3.6.1.1.1.1.11": "shadowFlag",\n    "1.3.6.1.1.1.1.12": "memberUid",\n    "1.3.6.1.1.1.1.13": "memberNisNetgroup",\n    "1.3.6.1.1.1.1.14": "nisNetgroupTriple",\n    "1.3.6.1.1.1.1.15": "ipServicePort",\n    "1.3.6.1.1.1.1.16": "ipServiceProtocol",\n    "1.3.6.1.1.1.1.17": "ipProtocolNumber",\n    "1.3.6.1.1.1.1.18": "oncRpcNumber",\n    "1.3.6.1.1.1.1.19": "ipHostNumber",\n    "1.3.6.1.1.1.1.20": "ipNetworkNumber",\n    "1.3.6.1.1.1.1.21": "ipNetmaskNumber",\n    "1.3.6.1.1.1.1.22": "macAddress",\n    "1.3.6.1.1.1.1.23": "bootParameter",\n    "1.3.6.1.1.1.1.24": "bootFile",\n    "1.3.6.1.1.1.1.26": "nisMapName",\n    "1.3.6.1.1.1.1.27": "nisMapEntry",\n    "2.5.4.72": "role",\n    "2.5.4.75": "xmlPrivilegeInfo",\n    "2.5.4.58": "attributeCertificateA",\n    "2.5.4.61": "aACertificate",\n    "2.5.4.62": "attributeDescriptorCertificate",\n    "2.5.4.59": "attributeCertificateRevocationList",\n    "2.5.4.63": "attributeAuthorityRevocationList",\n    "2.5.4.73": "delegationPath",\n    "2.5.4.71": "privPolicy",\n    "2.5.4.74": "protPrivPolicy",\n    "2.5.4.76": "xmlPrivPolicy",\n};\nAttributeTypeAndValue.attributeToValuePrinterMapping = {\n    "2.5.4.3": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.4": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.5": (element) => element.printableString,\n    "2.5.4.6": (element) => element.printableString,\n    "2.5.4.7": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.8": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.9": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.10": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.11": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.12": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.15": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.17": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.18": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.19": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.20": (element) => element.printableString,\n    "2.5.4.24": (element) => element.numericString,\n    "2.5.4.25": (element) => element.numericString,\n    "2.5.4.27": (element) => element.printableString,\n    "2.5.4.42": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.43": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.44": (element) => UnboundedDirectoryString_1.default.print(element),\n    "2.5.4.46": (element) => element.printableString,\n};\n\n\n//# sourceURL=webpack://x509/./source/InformationFramework/AttributeTypeAndValue.ts?')},"./source/InformationFramework/RDNSequence.ts":
/*!****************************************************!*\
  !*** ./source/InformationFramework/RDNSequence.ts ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst RelativeDistinguishedName_1 = __importDefault(__webpack_require__(/*! ./RelativeDistinguishedName */ "./source/InformationFramework/RelativeDistinguishedName.ts"));\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass RDNSequence {\n    constructor(value) {\n        this.value = value;\n    }\n    toString() {\n        return this.value.map((rdn) => rdn.toString()).join(",");\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on RDNSequence");\n            case -2: throw new errors.X509Error("Invalid construction on RDNSequence");\n            case -3: throw new errors.X509Error("Invalid tag number on RDNSequence");\n            default: throw new errors.X509Error("Undefined error when validating RDNSequence tag");\n        }\n        const rdnSequenceElements = value.set;\n        return new RDNSequence(rdnSequenceElements.map(RelativeDistinguishedName_1.default.fromElement));\n    }\n    toElement() {\n        const rdnSequenceElement = new asn1_ts_1.DERElement(0, 1, 16);\n        rdnSequenceElement.set = this.value.map((rdn) => rdn.toElement());\n        return rdnSequenceElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return this.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = RDNSequence;\n\n\n//# sourceURL=webpack://x509/./source/InformationFramework/RDNSequence.ts?')},"./source/InformationFramework/RelativeDistinguishedName.ts":
/*!******************************************************************!*\
  !*** ./source/InformationFramework/RelativeDistinguishedName.ts ***!
  \******************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst AttributeTypeAndValue_1 = __importDefault(__webpack_require__(/*! ./AttributeTypeAndValue */ "./source/InformationFramework/AttributeTypeAndValue.ts"));\nconst errors = __importStar(__webpack_require__(/*! ../errors */ "./source/errors.ts"));\nclass RelativeDistinguishedName {\n    constructor(value) {\n        this.value = value;\n        if (value.length < 1) {\n            throw new errors.X509Error("RelativeDistinguishedName must contain at least one AttributeTypeAndValue.");\n        }\n    }\n    toString() {\n        return this.value.map((atav) => atav.toString()).join("+");\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [17])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on RelativeDistinguishedName");\n            case -2: throw new errors.X509Error("Invalid construction on RelativeDistinguishedName");\n            case -3: throw new errors.X509Error("Invalid tag number on RelativeDistinguishedName");\n            default: throw new errors.X509Error("Undefined error when validating RelativeDistinguishedName tag");\n        }\n        const relativeDistinguishedNameElements = value.set;\n        return new RelativeDistinguishedName(relativeDistinguishedNameElements.map(AttributeTypeAndValue_1.default.fromElement));\n    }\n    toElement() {\n        const relativeDistinguishedNameElement = new asn1_ts_1.DERElement(0, 1, 17);\n        relativeDistinguishedNameElement.set = this.value.map((atav) => atav.toElement());\n        return relativeDistinguishedNameElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return this.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = RelativeDistinguishedName;\n\n\n//# sourceURL=webpack://x509/./source/InformationFramework/RelativeDistinguishedName.ts?')},"./source/InformationFramework/index.ts":
/*!**********************************************!*\
  !*** ./source/InformationFramework/index.ts ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.informationFrameworkOID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 1]);\nvar AttributeTypeAndValue_1 = __webpack_require__(/*! ./AttributeTypeAndValue */ "./source/InformationFramework/AttributeTypeAndValue.ts");\nexports.AttributeTypeAndValue = AttributeTypeAndValue_1.default;\nvar RDNSequence_1 = __webpack_require__(/*! ./RDNSequence */ "./source/InformationFramework/RDNSequence.ts");\nexports.RDNSequence = RDNSequence_1.default;\nvar RelativeDistinguishedName_1 = __webpack_require__(/*! ./RelativeDistinguishedName */ "./source/InformationFramework/RelativeDistinguishedName.ts");\nexports.RelativeDistinguishedName = RelativeDistinguishedName_1.default;\n\n\n//# sourceURL=webpack://x509/./source/InformationFramework/index.ts?')},"./source/MTSAbstractService/index.ts":
/*!********************************************!*\
  !*** ./source/MTSAbstractService/index.ts ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.mtsAbstractServiceOID = new asn1_ts_1.ObjectIdentifier([2, 6, 3, 0, 1]);\n\n\n//# sourceURL=webpack://x509/./source/MTSAbstractService/index.ts?')},"./source/PkiPMIProtocolSpecifications/Version8/index.ts":
/*!***************************************************************!*\
  !*** ./source/PkiPMIProtocolSpecifications/Version8/index.ts ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.pkiPMIProtocolSpecificationsVersion8OID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 43, 8]);\n\n\n//# sourceURL=webpack://x509/./source/PkiPMIProtocolSpecifications/Version8/index.ts?')},"./source/PkiPMIProtocolSpecifications/index.ts":
/*!******************************************************!*\
  !*** ./source/PkiPMIProtocolSpecifications/index.ts ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.pkiPMIProtocolSpecificationsOID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 43]);\n__export(__webpack_require__(/*! ./Version8/index */ "./source/PkiPMIProtocolSpecifications/Version8/index.ts"));\n\n\n//# sourceURL=webpack://x509/./source/PkiPMIProtocolSpecifications/index.ts?')},"./source/PkiPmiExternalDataTypes/Version8/AccessDescription.ts":
/*!**********************************************************************!*\
  !*** ./source/PkiPmiExternalDataTypes/Version8/AccessDescription.ts ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../../errors */ "./source/errors.ts"));\nclass AccessDescription {\n    constructor(accessMethod, accessLocation) {\n        this.accessMethod = accessMethod;\n        this.accessLocation = accessLocation;\n    }\n    static fromElement(value) {\n        switch (value.validateTag([0], [1], [16])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on AccessDescription");\n            case -2: throw new errors.X509Error("Invalid construction on AccessDescription");\n            case -3: throw new errors.X509Error("Invalid tag number on AccessDescription");\n            default: throw new errors.X509Error("Undefined error when validating AccessDescription tag");\n        }\n        const accessDescriptionElements = value.sequence;\n        if (accessDescriptionElements.length !== 2)\n            throw new errors.X509Error("Invalid number of elements in AccessDescription.");\n        switch (accessDescriptionElements[0].validateTag([0], [0], [6])) {\n            case 0: break;\n            case -1: throw new errors.X509Error("Invalid tag class on AccessDescription.accessMethod");\n            case -2: throw new errors.X509Error("Invalid construction on AccessDescription.accessMethod");\n            case -3: throw new errors.X509Error("Invalid tag number on AccessDescription.accessMethod");\n            default: throw new errors.X509Error("Undefined error when validating AccessDescription.accessMethod tag");\n        }\n        return new AccessDescription(accessDescriptionElements[0].objectIdentifier, accessDescriptionElements[1]);\n    }\n    toElement() {\n        const accessMethodElement = new asn1_ts_1.DERElement(0, 0, 6);\n        accessMethodElement.objectIdentifier = this.accessMethod;\n        const accessDescriptionElement = new asn1_ts_1.DERElement(0, 1, 16);\n        accessDescriptionElement.sequence = [\n            accessMethodElement,\n            this.accessLocation\n        ];\n        return accessDescriptionElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return AccessDescription.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = AccessDescription;\n\n\n//# sourceURL=webpack://x509/./source/PkiPmiExternalDataTypes/Version8/AccessDescription.ts?')},"./source/PkiPmiExternalDataTypes/Version8/index.ts":
/*!**********************************************************!*\
  !*** ./source/PkiPmiExternalDataTypes/Version8/index.ts ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.pkiPmiExternalDataTypesVersion8OID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 40, 8]);\nvar AccessDescription_1 = __webpack_require__(/*! ./AccessDescription */ "./source/PkiPmiExternalDataTypes/Version8/AccessDescription.ts");\nexports.AccessDescription = AccessDescription_1.default;\n\n\n//# sourceURL=webpack://x509/./source/PkiPmiExternalDataTypes/Version8/index.ts?')},"./source/PkiPmiExternalDataTypes/index.ts":
/*!*************************************************!*\
  !*** ./source/PkiPmiExternalDataTypes/index.ts ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.pkiPmiExternalDataTypesOID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 40]);\n__export(__webpack_require__(/*! ./Version8/index */ "./source/PkiPmiExternalDataTypes/Version8/index.ts"));\n\n\n//# sourceURL=webpack://x509/./source/PkiPmiExternalDataTypes/index.ts?')},"./source/PkiPmiWrapper/Version8/index.ts":
/*!************************************************!*\
  !*** ./source/PkiPmiWrapper/Version8/index.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.pkiPMIWrapperVersion8OID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 42, 8]);\n\n\n//# sourceURL=webpack://x509/./source/PkiPmiWrapper/Version8/index.ts?')},"./source/PkiPmiWrapper/index.ts":
/*!***************************************!*\
  !*** ./source/PkiPmiWrapper/index.ts ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.pkiPMIWrapperOID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 42]);\n__export(__webpack_require__(/*! ./Version8/index */ "./source/PkiPmiWrapper/Version8/index.ts"));\n\n\n//# sourceURL=webpack://x509/./source/PkiPmiWrapper/index.ts?')},"./source/SelectedAttributeTypes/Version8/UnboundedDirectoryString.ts":
/*!****************************************************************************!*\
  !*** ./source/SelectedAttributeTypes/Version8/UnboundedDirectoryString.ts ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nconst errors = __importStar(__webpack_require__(/*! ../../errors */ "./source/errors.ts"));\nclass UnboundedDirectoryString {\n    constructor(value) {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    static print(element) {\n        const uds = UnboundedDirectoryString.fromElement(element);\n        return uds.toString();\n    }\n    static fromElement(value) {\n        if (value.tagClass !== 0)\n            throw new errors.X509Error("UnboundedDirectoryString must be of universal class");\n        if (value.construction !== 0)\n            throw new errors.X509Error("UnboundedDirectoryString must be of primitive construction");\n        switch (value.tagNumber) {\n            case (20): {\n                return new UnboundedDirectoryString("");\n            }\n            case (19): {\n                return new UnboundedDirectoryString(value.printableString);\n            }\n            case (30): {\n                return new UnboundedDirectoryString(value.bmpString);\n            }\n            case (28): {\n                return new UnboundedDirectoryString(value.universalString);\n            }\n            case (12): {\n                return new UnboundedDirectoryString(value.utf8String);\n            }\n            default:\n                throw new errors.X509Error("UnboundedDirectoryString was constituted of an invalid CHOICE");\n        }\n    }\n    toElement() {\n        const unboundedDirectoryStringElement = new asn1_ts_1.DERElement(0, 0, 12);\n        unboundedDirectoryStringElement.utf8String = this.value;\n        return unboundedDirectoryStringElement;\n    }\n    static fromBytes(value) {\n        const el = new asn1_ts_1.DERElement();\n        el.fromBytes(value);\n        return this.fromElement(el);\n    }\n    toBytes() {\n        return this.toElement().toBytes();\n    }\n}\nexports.default = UnboundedDirectoryString;\n\n\n//# sourceURL=webpack://x509/./source/SelectedAttributeTypes/Version8/UnboundedDirectoryString.ts?')},"./source/SelectedAttributeTypes/Version8/index.ts":
/*!*********************************************************!*\
  !*** ./source/SelectedAttributeTypes/Version8/index.ts ***!
  \*********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.selectedAttributeTypesVersion8OID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 5, 8]);\nvar UnboundedDirectoryString_1 = __webpack_require__(/*! ./UnboundedDirectoryString */ "./source/SelectedAttributeTypes/Version8/UnboundedDirectoryString.ts");\nexports.UnboundedDirectoryString = UnboundedDirectoryString_1.default;\n\n\n//# sourceURL=webpack://x509/./source/SelectedAttributeTypes/Version8/index.ts?')},"./source/SelectedAttributeTypes/index.ts":
/*!************************************************!*\
  !*** ./source/SelectedAttributeTypes/index.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, "__esModule", { value: true });\nconst asn1_ts_1 = __webpack_require__(/*! asn1-ts */ "./node_modules/asn1-ts/dist/node/asn1.js");\nexports.selectedAttributeTypesOID = new asn1_ts_1.ObjectIdentifier([2, 5, 1, 5]);\n__export(__webpack_require__(/*! ./Version8/index */ "./source/SelectedAttributeTypes/Version8/index.ts"));\n\n\n//# sourceURL=webpack://x509/./source/SelectedAttributeTypes/index.ts?')},"./source/errors.ts":
/*!**************************!*\
  !*** ./source/errors.ts ***!
  \**************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nclass X509Error extends Error {\n    constructor(m) {\n        super(m);\n    }\n}\nexports.X509Error = X509Error;\n\n\n//# sourceURL=webpack://x509/./source/errors.ts?')},"./source/index.ts":
/*!*************************!*\
  !*** ./source/index.ts ***!
  \*************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, "__esModule", { value: true });\n__export(__webpack_require__(/*! ./errors */ "./source/errors.ts"));\n__export(__webpack_require__(/*! ./AttributeCertificateDefinitions/index */ "./source/AttributeCertificateDefinitions/index.ts"));\n__export(__webpack_require__(/*! ./AuthenticationFramework/index */ "./source/AuthenticationFramework/index.ts"));\n__export(__webpack_require__(/*! ./CertificateExtensions/index */ "./source/CertificateExtensions/index.ts"));\n__export(__webpack_require__(/*! ./InformationFramework/index */ "./source/InformationFramework/index.ts"));\n__export(__webpack_require__(/*! ./MTSAbstractService/index */ "./source/MTSAbstractService/index.ts"));\n__export(__webpack_require__(/*! ./PkiPmiExternalDataTypes/index */ "./source/PkiPmiExternalDataTypes/index.ts"));\n__export(__webpack_require__(/*! ./PkiPMIProtocolSpecifications/index */ "./source/PkiPMIProtocolSpecifications/index.ts"));\n__export(__webpack_require__(/*! ./PkiPmiWrapper */ "./source/PkiPmiWrapper/index.ts"));\n__export(__webpack_require__(/*! ./SelectedAttributeTypes/index */ "./source/SelectedAttributeTypes/index.ts"));\n\n\n//# sourceURL=webpack://x509/./source/index.ts?')},0:
/*!*******************************!*\
  !*** multi ./source/index.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! ./source/index.ts */"./source/index.ts");\n\n\n//# sourceURL=webpack://x509/multi_./source/index.ts?')}});